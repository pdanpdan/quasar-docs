(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[177],{"097b":function(t,e,i){"use strict";i.r(e);var a=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("doc-page",{attrs:{"meta-title":t.metaTitle,title:"Morph Utils",related:t.related,nav:t.nav,badge:t.badge,toc:t.toc,"meta-desc":t.metaDesc}},[i("p",[t._v("You can morph one DOM element into another (with animation) or between two states of the same element using Quasar’s morph util described below.")]),i("p",[t._v("Might also be worth to look at the "),i("doc-link",{attrs:{to:"/vue-directives/morph"}},[t._v("Morph directive")]),t._v(" which uses this util but it’s simpler to use.")],1),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"basic-usage"},on:{click:function(e){return t.copyHeading("basic-usage")}}},[t._v("Basic usage")]),i("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[i("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[i("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" morph "),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n\n"),i("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Morph one DOM element to another:")]),t._v("\n"),i("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cancelMorph "),i("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token function"}},[t._v("morph")]),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),i("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),i("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#from-el'")]),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  to"),i("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),i("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#to-el'")]),t._v("\n"),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),i("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),i("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call cancelMorph() to cancel the morphing")]),t._v("\n")])]),i("p",[t._v("The function expects one mandatory Object parameter with the following keys:")]),i("q-markup-table",{staticStyle:{width:"fit-content","max-width":"100%"},attrs:{"wrap-cells":!0,flat:!0,bordered:!0}},[i("thead",[i("tr",[i("th",{staticClass:"text-left"},[t._v("Name")]),i("th",{staticClass:"text-left"},[t._v("Type")]),i("th",{staticClass:"text-left"},[t._v("Default value")]),i("th",{staticClass:"text-left"},[t._v("Description")])])]),i("tbody",[i("tr",[i("td",[t._v("from")]),i("td",[t._v("DOM")]),i("td",[t._v("-")]),i("td",[t._v("("),i("strong",[t._v("required")]),t._v(") A DOM element or CSS selector or a function returning a DOM element")])]),i("tr",[i("td",[t._v("to")]),i("td",[t._v("DOM")]),i("td",[t._v("-")]),i("td",[t._v("Same as “from”; if “to” is missing, then it is assumes that it is the same as “from”")])]),i("tr",[i("td",[t._v("onToggle()")]),i("td",[t._v("Function")]),i("td",[t._v("-")]),i("td",[t._v("A synchronous toggle function that will be executed immediately after the state of the initial element is saved. Use a function that toggles the state of the components so that the destination element becomes available.")])]),i("tr",[i("td",[t._v("waitFor")]),i("td",[t._v("Number/‘transitioned’/Promise")]),i("td",[t._v("0")]),i("td",[t._v("A number, ‘transitionend’ or a Promise - it will delay animation start for that number of milliseconds, or until a ‘transitionend’ event is emitted by the destination element, or until the promise is resolved (if the promise is rejected the morphing will abort, but the "),i("code",{staticClass:"doc-token"},[t._v("toggle function")]),t._v(" was already called)")])]),i("tr",[i("td",[t._v("duration")]),i("td",[t._v("Number")]),i("td",[t._v("300")]),i("td",[t._v("The duration in milliseconds for the animation")])]),i("tr",[i("td",[t._v("easing")]),i("td",[t._v("String")]),i("td",[t._v("‘ease-in-out’")]),i("td",[t._v("The timing function for the animation (CSS easing format)")])]),i("tr",[i("td",[t._v("delay")]),i("td",[t._v("Number")]),i("td",[t._v("0")]),i("td",[t._v("The delay in milliseconds for the animation")])]),i("tr",[i("td",[t._v("fill")]),i("td",[t._v("String")]),i("td",[t._v("‘none’")]),i("td",[t._v("The fill mode for the animation")])]),i("tr",[i("td",[t._v("style")]),i("td",[t._v("String/Object")]),i("td",[t._v("-")]),i("td",[t._v("The extra style to be applied to the morphing element while it is animated (either as string or a CSSStyleDeclaration object)")])]),i("tr",[i("td",[t._v("classes")]),i("td",[t._v("String")]),i("td",[t._v("-")]),i("td",[t._v("The extra classes to be applied to the morphing element while it is animated (as string)")])]),i("tr",[i("td",[t._v("resize")]),i("td",[t._v("Boolean")]),i("td",[i("em",[t._v("false")])]),i("td",[t._v("Force resizing instead of the default scaling transformation")])]),i("tr",[i("td",[t._v("useCSS")]),i("td",[t._v("Boolean")]),i("td",[i("em",[t._v("false")])]),i("td",[t._v("Force use of CSS instead of the Animation API")])]),i("tr",[i("td",[t._v("hideFromClone")]),i("td",[t._v("Boolean")]),i("td",[i("em",[t._v("false")])]),i("td",[t._v("By default a clone of the initial element is used to fill the space after the element is removed - set this flag if the initial element is not removed or resizing of the space occupied by the initial element is not desired")])]),i("tr",[i("td",[t._v("keepToClone")]),i("td",[t._v("Boolean")]),i("td",[i("em",[t._v("false")])]),i("td",[t._v("By default the final element is removed from it’s final position to be animated - set this flag to keep a copy in the final position")])]),i("tr",[i("td",[t._v("tween")]),i("td",[t._v("Boolean")]),i("td",[i("em",[t._v("false")])]),i("td",[t._v("By default the final element is morphed from the position and aspect of the initial element to the ones of the final element - set this flag to use an opacity tween between the initial and final elements")])]),i("tr",[i("td",[t._v("tweenFromOpacity")]),i("td",[t._v("Number")]),i("td",[t._v("0.6")]),i("td",[t._v("If using "),i("strong",[t._v("tween")]),t._v(" it is the initial opacity of the initial element (will be animated to 0) - the initial element is placed on top of the destination element")])]),i("tr",[i("td",[t._v("tweenToOpacity")]),i("td",[t._v("Number")]),i("td",[t._v("0.5")]),i("td",[t._v("If using "),i("strong",[t._v("tween")]),t._v(" it is the initial opacity of the destination element (will be animated to 1)")])]),i("tr",[i("td",[t._v("onEnd(direction, aborted)")]),i("td",[t._v("Function")]),i("td",[t._v("-")]),i("td",[t._v("A function that will be called once the morphing is finalized - receives two params: “direction” is a string (‘to’ if the morphing was finished in the final state or ‘from’ if it was finished in the initial state) and “aborted” is a boolean (true means that the animation was aborted)")])])])]),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"morphing-lifecycle"},on:{click:function(e){return t.copyHeading("morphing-lifecycle")}}},[t._v("Morphing lifecycle")]),i("ol",[i("li",[t._v("Get the aspect and position of the initial element (if a function is provided for getting the initial element it will be called)")]),i("li",[t._v("Calculate the size and position of the container of the initial element")]),i("li",[t._v("If another morphing was using the same element that morphing will be aborted")]),i("li",[t._v("Execute the onToggle() function (if present)")]),i("li",[t._v("Recalculate the size and position of the container of the initial element to check if they are changed")]),i("li",[t._v("In the next tick (to allow Vue to process the state changes) the final element will be identified (if a function is provided for getting the final element it will be called)")]),i("li",[t._v("If another morphing was using the same element that morphing will be aborted")]),i("li",[t._v("Calculate the size and position of the container of the final element")]),i("li",[t._v("If a "),i("strong",[t._v("waitFor")]),t._v(" is provided, wait that number of milliseconds, for a ‘transitionend’ event or until the promise is resolved (if the promise is rejected then the morphing is aborted)")]),i("li",[t._v("Recalculate the size and position of the container of the final element to check if they are changed")]),i("li",[t._v("Get the aspect and position of the final element")]),i("li",[t._v("Start the animation")])]),i("p",[t._v("Regarding the cancel() function (the return value of a call to morph()):")]),i("ul",[i("li",[t._v("If the "),i("code",{staticClass:"doc-token"},[t._v("cancel")]),t._v(" function that was returned is called during steps 1 to 11 then the morphing will be aborted (the "),i("code",{staticClass:"doc-token"},[t._v("toggle function")]),t._v(" will still be called if the cancel comes after step 4) and the returned value will be "),i("strong",[t._v("false")]),t._v(".")]),i("li",[t._v("If the "),i("code",{staticClass:"doc-token"},[t._v("cancel")]),t._v(" function is called between the start and end of the animation then the animation will be reversed and the returned value will be "),i("strong",[t._v("true")]),t._v(".")]),i("li",[t._v("If the "),i("code",{staticClass:"doc-token"},[t._v("cancel")]),t._v(" function is called after the end of the animation nothing will happen and the returned value will be "),i("strong",[t._v("false")]),t._v(".")])]),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"examples"},on:{click:function(e){return t.copyHeading("examples")}}},[t._v("Examples")]),i("doc-example",{attrs:{title:"Morphing the same element",file:"MorphUtils/SameElement"}}),i("doc-example",{attrs:{title:"Morphing a QCard from a QFabAction",file:"MorphUtils/FabCard"}}),i("doc-example",{attrs:{title:"Image gallery ",file:"MorphUtils/ImageGallery"}}),i("doc-example",{attrs:{title:"Horizontal image strip ",file:"MorphUtils/ImageStripHorizontal"}}),i("doc-example",{attrs:{title:"Vertical image strip ",file:"MorphUtils/ImageStripVertical"}})],1)},n=[],o=i("8669"),s={name:"DocMarkdownPage",created:function(){this.metaTitle="Morph Utils",this.metaDesc="Morph one DOM element into another (with animation) or between two states of the same element using Quasar's morph util.",this.related=[{name:"Morph",category:"Vue Directives",path:"/vue-directives/morph"}],this.nav=[{name:"DOM Utils",category:"Quasar Utils",path:"/quasar-utils/dom-utils",dir:"left"},{name:"Formatter Utils",category:"Quasar Utils",path:"/quasar-utils/formatter-utils",dir:"right"}],this.badge="v1.13+",this.toc=[{id:"basic-usage",title:"Basic usage"},{id:"morphing-lifecycle",title:"Morphing lifecycle"},{id:"examples",title:"Examples"}],this.copyHeading=o["a"]}},l=s,r=i("2877"),d=Object(r["a"])(l,a,n,!1,null,null,null);e["default"]=d.exports}}]);