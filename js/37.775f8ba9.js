(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[37],{4489:function(t,e,s){"use strict";s.r(e);var a=function(){var t=this,e=t._self._c;return e("doc-page",{attrs:{"meta-title":t.metaTitle,title:"Providing a directive",nav:t.nav,toc:t.toc,"meta-desc":t.metaDesc}},[e("p",[t._v("This guide is for when you want to create a new directive and provide it through an App Extension, which will inject it into the hosting app.")]),e("div",{staticClass:"doc-note doc-note--tip"},[e("p",{staticClass:"doc-note__title"},[t._v("TIP")]),e("p",[t._v("To create an App Extension project folder, please first read the "),e("doc-link",{attrs:{to:"/app-extensions/development-guide/introduction"}},[t._v("Development Guide > Introduction")]),t._v(".")],1)]),e("div",{staticClass:"doc-note doc-note--tip"},[e("p",{staticClass:"doc-note__title"},[t._v("Full Example")]),e("p",[t._v("To see an example of what we will build, head over to "),e("doc-link",{attrs:{to:"https://github.com/quasarframework/app-extension-examples/tree/v1/my-directive"}},[t._v("MyDirective full example")]),t._v(", which is a GitHub repo with this App Extension.")],1)]),e("p",[t._v("Create a folder structure to keep your code modularized and organized. For instance, for a directive, create a structure that looks like this:")]),e("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── package.json\n└── src\n    ├── boot                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# folder to contain 'boot' code")]),t._v("\n    │   └── register-my-directive.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# boot file for component")]),t._v("\n    ├── directive                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# folder to contain component")]),t._v("\n    │   └── MyDirective.js           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# directive file")]),t._v("\n    └── index.js                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Described in Index API")]),t._v("\n")])]),e("p",[t._v("Now, you need to handle registering your Vue directive. You do this with the "),e("code",{staticClass:"doc-token"},[t._v("/index.js")]),t._v(" file (described in the "),e("doc-link",{attrs:{to:"/app-extensions/development-guide/index-api"}},[t._v("Index API")]),t._v(") that was created when you set up your new App Extension.")],1),e("p",[t._v("Let’s break it down.")]),e("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /index.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Optional!)")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Quasar compatibility check; you may need")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// hard dependencies, as in a minimum version of the "quasar"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// package or a minimum version of "@quasar/app" CLI')]),t._v("\n  api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("compatibleWith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^1.0.0'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("compatibleWith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@quasar/app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^1.0.0'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here we extend /quasar.conf.js, so we can add")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a boot file which registers our new Vue directive;")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "extendConf" will be defined below (keep reading the tutorial)')]),t._v("\n  api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendQuasarConf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extendConf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("p",[t._v("The first group does a compatibility check with Quasar (which is optional, but recommended). If your component is using features of Quasar that were available after a certain version, you can make sure that the version of Quasar installed is the correct one.")]),e("div",{staticClass:"doc-note doc-note--tip"},[e("p",{staticClass:"doc-note__title"},[t._v("TIP")]),e("p",[t._v("Not only can you do a "),e("code",{staticClass:"doc-token"},[t._v("api.compatibleWith()")]),t._v(" to check against Quasar packages, but with any other available packages (that you do not supply yourself through your App Extension) as well. Please read "),e("doc-link",{attrs:{to:"/app-extensions/development-guide/introduction#handling-package-dependencies"}},[t._v("Handling package dependencies")]),t._v(" section from the App Extension Development Guide > Introduction page for more information.")],1)]),e("p",[t._v("The second group tells Quasar to call our custom function when the "),e("code",{staticClass:"doc-token"},[t._v("extendQuasarConf")]),t._v(" CLI life-cycle hook is called. It would look something like this:")]),e("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /index.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendConf")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("conf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure my-directive boot file is registered")]),t._v("\n  conf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~quasar-app-extension-my-directive/src/boot/register-my-directive.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure boot & other files get transpiled")]),t._v("\n  conf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transpileDependencies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("quasar-app-extension-my-directive[\\\\/]src")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("p",[t._v("Finally, let’s see how the boot file would look like. Make sure that you read the "),e("doc-link",{attrs:{to:"/quasar-cli/boot-files"}},[t._v("Boot files")]),t._v(" documentation and understand what a Boot file is first.")],1),e("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /src/boot/my-directive.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MyDirective "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../directive/MyDirective.js'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We globally register our directive with Vue;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remember that all directives in Vue will start with 'v-'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// but that should not be part of your directive name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://v2.vuejs.org/v2/guide/custom-directive.html")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'my-directive' will be used as 'v-my-directive'")]),t._v("\nVue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-directive'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyDirective"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},n=[],o=s("8669"),r={name:"DocMarkdownPage",created:function(){this.metaTitle="Providing a directive",this.metaDesc="Tips and tricks on how to provide a Vue directive to the host app of a Quasar App Extension.",this.nav=[{name:"Provide a UI component",category:"Tips and Tricks",path:"/app-extensions/tips-and-tricks/provide-a-ui-component",dir:"left"},{name:"Inject Quasar Plugin",category:"Tips and Tricks",path:"/app-extensions/tips-and-tricks/inject-quasar-plugin",dir:"right"}],this.toc=[],this.copyHeading=o["a"]}},i=r,p=s("2877"),c=Object(p["a"])(i,a,n,!1,null,null,null);e["default"]=c.exports}}]);