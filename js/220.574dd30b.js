(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[220],{8796:function(e,t,o){"use strict";o.r(t);var a=function(){var e=this,t=e._self._c;return t("doc-page",{attrs:{"meta-title":e.metaTitle,title:"Checkbox",related:e.related,nav:e.nav,toc:e.toc,"meta-desc":e.metaDesc}},[t("p",[e._v("The QCheckbox component is another basic element for user input. You can use this to supply a way for the user to toggle an option.")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("Please also refer to the "),t("doc-link",{attrs:{to:"/vue-components/option-group"}},[e._v("QOptionGroup")]),e._v(" on other possibilities for creating groups of Checkboxes.")],1)]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qcheckbox-api"},on:{click:function(t){return e.copyHeading("qcheckbox-api")}}},[e._v("QCheckbox API")]),t("doc-api",{attrs:{file:"QCheckbox"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(t){return e.copyHeading("usage")}}},[e._v("Usage")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"standard"},on:{click:function(t){return e.copyHeading("standard")}}},[e._v("Standard")]),t("doc-example",{attrs:{title:"Standard",file:"QCheckbox/Standard"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-custom-icons"},on:{click:function(t){return e.copyHeading("with-custom-icons")}}},[e._v("With custom icons "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.18+"}})],1),t("doc-example",{attrs:{title:"With icons",file:"QCheckbox/WithIcons"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"label"},on:{click:function(t){return e.copyHeading("label")}}},[e._v("Label")]),t("doc-example",{attrs:{title:"Label",file:"QCheckbox/Label"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"coloring"},on:{click:function(t){return e.copyHeading("coloring")}}},[e._v("Coloring")]),t("p",[e._v("In the second row in the example below, the property "),t("code",{staticClass:"doc-token"},[e._v("keep-color")]),e._v(" is being used to retain the passed in color when the checkbox is not in a toggled state.")]),t("doc-example",{attrs:{title:"Coloring",file:"QCheckbox/Coloring"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"dense-and-dark"},on:{click:function(t){return e.copyHeading("dense-and-dark")}}},[e._v("Dense and dark")]),t("doc-example",{attrs:{title:"Dense",file:"QCheckbox/Dense"}}),t("doc-example",{attrs:{title:"On a dark background",file:"QCheckbox/OnDarkBackground",dark:""}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"sizes"},on:{click:function(t){return e.copyHeading("sizes")}}},[e._v("Sizes "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.8+"}})],1),t("p",[e._v("Apart from the standard sizes below, you can define your own through the "),t("code",{staticClass:"doc-token"},[e._v("size")]),e._v(" property (last one is a custom size).")]),t("doc-example",{attrs:{title:"Standard sizes",file:"QCheckbox/StandardSizes"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"indeterminate-state"},on:{click:function(t){return e.copyHeading("indeterminate-state")}}},[e._v("Indeterminate state")]),t("p",[e._v("In the example below, as soon as you click on the first checkbox it starts toggling between true/false. The second checkbox, on the other hand toggles between the three states (indeterminate/true/false) with help from "),t("code",{staticClass:"doc-token"},[e._v("toggle-indeterminate")]),e._v(". You can optionally set the property "),t("code",{staticClass:"doc-token"},[e._v("indeterminate-value")]),e._v(", otherwise the indeterminate value will be considered "),t("code",{staticClass:"doc-token"},[e._v("null")]),e._v(".")]),t("doc-example",{attrs:{title:"Indeterminate state",file:"QCheckbox/IndeterminateState"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"toggle-order"},on:{click:function(t){return e.copyHeading("toggle-order")}}},[e._v("Toggle order "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.12+"}})],1),t("p",[e._v("By default, QCheckbox follows this chain when toggling: indeterminate -> checked -> unchecked. However, you can change this behavior through the "),t("code",{staticClass:"doc-token"},[e._v("toggle-order")]),e._v(" prop. This property determines the order of the states and can be "),t("code",{staticClass:"doc-token"},[e._v("tf")]),e._v(" (default) or "),t("code",{staticClass:"doc-token"},[e._v("ft")]),e._v(" ("),t("code",{staticClass:"doc-token"},[e._v("t")]),e._v(" stands for state of true/checked while "),t("code",{staticClass:"doc-token"},[e._v("f")]),e._v(" for state of false/unchecked).")]),t("p",[e._v("Toggling order is:")]),t("ul",[t("li",[e._v("if "),t("code",{staticClass:"doc-token"},[e._v("toggle-indeterminate")]),e._v(" is true, then: indet -> first state -> second state -> indet (and repeat)")]),t("li",[e._v("otherwise (no toggle-indeterminate): indet -> first state -> second state -> first state -> second state -> â€¦")])]),t("doc-example",{attrs:{title:"Toggle order",file:"QCheckbox/ToggleOrder"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"array-model"},on:{click:function(t){return e.copyHeading("array-model")}}},[e._v("Array model")]),t("doc-example",{attrs:{title:"Array as model",file:"QCheckbox/ArrayAsModel"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"custom-model-values"},on:{click:function(t){return e.copyHeading("custom-model-values")}}},[e._v("Custom model values")]),t("doc-example",{attrs:{title:"Custom model values",file:"QCheckbox/CustomModel"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-qoptiongroup"},on:{click:function(t){return e.copyHeading("with-qoptiongroup")}}},[e._v("With QOptionGroup")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("You can also use "),t("doc-link",{attrs:{to:"/vue-components/option-group"}},[e._v("QOptionGroup")]),e._v(", which simplifies the usage when you have groups of checkboxes, like in example below.")],1)]),t("doc-example",{attrs:{title:"Usage with QOptionGroup",file:"QCheckbox/OptionGroup"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-qitem"},on:{click:function(t){return e.copyHeading("with-qitem")}}},[e._v("With QItem")]),t("p",[e._v("In the example below, we are rendering a "),t("code",{staticClass:"doc-token"},[e._v("<label>")]),e._v(" tag (notice "),t("code",{staticClass:"doc-token"},[e._v('tag="label"')]),e._v(") so the QCheckbox will respond to clicks on QItems to change toggle state.")]),t("doc-example",{attrs:{title:"With QItem",file:"QCheckbox/InaList"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"disable"},on:{click:function(t){return e.copyHeading("disable")}}},[e._v("Disable")]),t("doc-example",{attrs:{title:"Disable",file:"QCheckbox/Disable"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"native-form-submit"},on:{click:function(t){return e.copyHeading("native-form-submit")}}},[e._v("Native form submit "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),t("p",[e._v("When dealing with a native form which has an "),t("code",{staticClass:"doc-token"},[e._v("action")]),e._v(" and a "),t("code",{staticClass:"doc-token"},[e._v("method")]),e._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{staticClass:"doc-token"},[e._v("name")]),e._v(" property on QCheckbox, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")]),t("doc-example",{attrs:{title:"Native form",file:"QCheckbox/NativeForm"}})],1)},i=[],s=o("8669"),n={name:"DocMarkdownPage",created:function(){this.metaTitle="Checkbox",this.metaDesc="The QCheckbox Vue component is a checkbox with features like coloring, ripple and indeterminate state.",this.related=[{name:"Toggle",category:"Form Components",path:"/vue-components/toggle"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle"}],this.nav=[{name:"Radio",category:"Form Components",path:"/vue-components/radio",dir:"left"},{name:"Toggle",category:"Form Components",path:"/vue-components/toggle",dir:"right"}],this.toc=[{id:"qcheckbox-api",title:"QCheckbox API"},{id:"usage",title:"Usage"},{id:"standard",title:"Standard",sub:!0},{id:"with-custom-icons",title:"With custom icons",sub:!0},{id:"label",title:"Label",sub:!0},{id:"coloring",title:"Coloring",sub:!0},{id:"dense-and-dark",title:"Dense and dark",sub:!0},{id:"sizes",title:"Sizes",sub:!0},{id:"indeterminate-state",title:"Indeterminate state",sub:!0},{id:"toggle-order",title:"Toggle order",sub:!0},{id:"array-model",title:"Array model",sub:!0},{id:"custom-model-values",title:"Custom model values",sub:!0},{id:"with-qoptiongroup",title:"With QOptionGroup",sub:!0},{id:"with-qitem",title:"With QItem",sub:!0},{id:"disable",title:"Disable",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],this.copyHeading=s["a"]}},c=n,d=o("2877"),r=Object(d["a"])(c,a,i,!1,null,null,null);t["default"]=r.exports}}]);