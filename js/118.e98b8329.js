(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[118],{"968e":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t._self._c;return e("doc-page",{attrs:{"meta-title":t.metaTitle,title:"Electron Preload Script",nav:t.nav,badge:t.badge,toc:t.toc,"meta-desc":t.metaDesc}},[e("p",[t._v("As of “@quasar/app” v1.5+, you can benefit from an Electron preload script, which is very useful when you have "),e("doc-link",{attrs:{to:"/quasar-cli/developing-electron-apps/node-integration"}},[t._v("Node Integration")]),t._v(" turned off.")],1),e("p",[t._v("This preload script can allow you to inject Nodejs stuff into the “window” global from the rendered thread (UI). This script will run in the browser, before your rendered thread. Regardless of your Node Integration setting, this file will have access to Nodejs. So be careful what you do with it!")]),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"how-to-enable-it"},on:{click:function(e){return t.copyHeading("how-to-enable-it")}}},[t._v("How to enable it")]),e("p",[t._v("In "),e("code",{staticClass:"doc-token"},[t._v("/src-electron/main-process/")]),t._v(" folder, create a file and name it "),e("code",{staticClass:"doc-token"},[t._v("electron-preload.js")]),t._v(". Fill it with your preload code. Then edit "),e("code",{staticClass:"doc-token"},[t._v("/src-electron/main-process/electron-main.js")]),t._v(", near the “webPreferences” section:")]),e("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /src-electron/main-process/electron-main.js")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add this at the top:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWindow")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  mainWindow "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("webPreferences")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nodeIntegration")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("QUASAR_NODE_INTEGRATION")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nodeIntegrationInWorker")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("QUASAR_NODE_INTEGRATION")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HERE IS THE MAGIC:")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("preload")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron-preload.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),e("div",{staticClass:"doc-note doc-note--warning"},[e("p",{staticClass:"doc-note__title"},[t._v("WARNING")]),e("p",[t._v("The name "),e("code",{staticClass:"doc-token"},[t._v("electron-preload.js")]),t._v(" cannot be changed, otherwise Quasar will not detect it and your production build will fail.")])]),e("p",[t._v("Example of "),e("code",{staticClass:"doc-token"},[t._v("/src-electron/main-process/electron-preload.js")]),t._v(" content:")]),e("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[e("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("electron "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"limitations-on-electron-preload-js"},on:{click:function(e){return t.copyHeading("limitations-on-electron-preload-js")}}},[t._v("Limitations on electron-preload.js")]),e("ol",[e("li",[t._v("This file is not transpiled by Babel.")]),e("li",[t._v("This file is not going through any linting.")]),e("li",[t._v("You cannot import files with a relative path from it, as it is copied as-is into the final app bundle.")]),e("li",[t._v("You need to have this file already created before starting up the “quasar dev” command, otherwise any changes in it will not trigger a reload.")])])])},s=[],o=n("8669"),r={name:"DocMarkdownPage",created:function(){this.metaTitle="Electron Preload Script",this.metaDesc="How to handle Electron Node Integration with an Electron Preload script with Quasar CLI.",this.nav=[{name:"Node Integration",category:"Developing Electron Apps",path:"/quasar-cli/developing-electron-apps/node-integration",dir:"left"},{name:"Electron Packages",category:"Developing Electron Apps",path:"/quasar-cli/developing-electron-apps/electron-packages",dir:"right"}],this.badge="@quasar/app v1.5+",this.toc=[{id:"how-to-enable-it",title:"How to enable it"},{id:"limitations-on-electron-preload-js",title:"Limitations on electron-preload.js"}],this.copyHeading=o["a"]}},c=r,p=n("2877"),i=Object(p["a"])(c,a,s,!1,null,null,null);e["default"]=i.exports}}]);