(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[226],{b389:function(e,t,i){"use strict";i.r(t);var o=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("doc-page",{attrs:{"meta-title":e.metaTitle,title:"File Picker",related:e.related,nav:e.nav,badge:e.badge,toc:e.toc,"meta-desc":e.metaDesc}},[i("p",[e._v("QFile is a component which handles the user interaction for picking file(s).")]),i("div",{staticClass:"doc-note doc-note--tip"},[i("p",{staticClass:"doc-note__title"},[e._v("TIP")]),i("p",[e._v("If you also want a component to also handle the upload for you, please consider using "),i("doc-link",{attrs:{to:"/vue-components/uploader"}},[e._v("QUploader")]),e._v(" instead.")],1)]),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qfile-api"},on:{click:function(t){return e.copyHeading("qfile-api")}}},[e._v("QFile API")]),i("doc-api",{attrs:{file:"QFile"}}),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"design"},on:{click:function(t){return e.copyHeading("design")}}},[e._v("Design")]),i("div",{staticClass:"doc-note doc-note--warning"},[i("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),i("p",[e._v("For your QFile you can use only one of the main designs ("),i("code",{staticClass:"doc-token"},[e._v("filled")]),e._v(", "),i("code",{staticClass:"doc-token"},[e._v("outlined")]),e._v(", "),i("code",{staticClass:"doc-token"},[e._v("standout")]),e._v(", "),i("code",{staticClass:"doc-token"},[e._v("borderless")]),e._v("). You cannot use multiple as they are self-exclusive.")])]),i("doc-example",{attrs:{title:"Design Overview",file:"QFile/DesignOverview"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"decorators"},on:{click:function(t){return e.copyHeading("decorators")}}},[e._v("Decorators")]),i("doc-example",{attrs:{title:"Decorators",file:"QFile/Decorators"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"coloring"},on:{click:function(t){return e.copyHeading("coloring")}}},[e._v("Coloring")]),i("doc-example",{attrs:{title:"Coloring",file:"QFile/Coloring"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"clearable"},on:{click:function(t){return e.copyHeading("clearable")}}},[e._v("Clearable")]),i("p",[e._v("As a helper, you can use "),i("code",{staticClass:"doc-token"},[e._v("clearable")]),e._v(" prop so user can reset model to "),i("code",{staticClass:"doc-token"},[e._v("null")]),e._v(" through an appended icon. The second QFile in the example below is the equivalent of using "),i("code",{staticClass:"doc-token"},[e._v("clearable")]),e._v(".")]),i("doc-example",{attrs:{title:"Clearable",file:"QFile/Clearable"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"disable-and-readonly"},on:{click:function(t){return e.copyHeading("disable-and-readonly")}}},[e._v("Disable and readonly")]),i("doc-example",{attrs:{title:"Disable and readonly",file:"QFile/DisableReadonly"}}),i("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(t){return e.copyHeading("usage")}}},[e._v("Usage")]),i("div",{staticClass:"doc-note doc-note--warning"},[i("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),i("p",[e._v("Under the covers, QFile uses a native input. Due to browser security policy, it is not allowed to programmatically fill such an input with a value. As a result, even if you set v-model from the beginning to a value, the component will show those file(s) but the input tag itself won’t be filled in with that value. A user interaction (click/tap/"),i("kbd",[e._v("ENTER")]),e._v(" key/"),i("kbd",[e._v("SPACE")]),e._v(" key) is absolutely required in order for the native input to contain them. It’s best to always have the initial value of model set to "),i("code",{staticClass:"doc-token"},[e._v("null")]),e._v(" or "),i("code",{staticClass:"doc-token"},[e._v("undefined/void 0")]),e._v(".")])]),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"basic"},on:{click:function(t){return e.copyHeading("basic")}}},[e._v("Basic")]),i("doc-example",{attrs:{title:"Single file",file:"QFile/BasicSingle"}}),i("doc-example",{attrs:{title:"Multiple files",file:"QFile/BasicMultiple"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"appending-files"},on:{click:function(t){return e.copyHeading("appending-files")}}},[e._v("Appending files "),i("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.11.3+"}})],1),i("p",[e._v("By default, QFile replaces the model each time the user selects any files through the popup. However, when you are accepting multiple files ("),i("code",{staticClass:"doc-token"},[e._v("multiple")]),e._v(" prop) you can change this behavior and append the new selection to the model rather than replacing its old value.")]),i("p",[e._v("Below you can pick files multiple times and QFile will keep on appending them to the model:")]),i("doc-example",{attrs:{title:"Appending files",file:"QFile/AppendingFiles"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"counters"},on:{click:function(t){return e.copyHeading("counters")}}},[e._v("Counters")]),i("doc-example",{attrs:{title:"Basic counter",file:"QFile/CounterBasic"}}),i("doc-example",{attrs:{title:"Counter label",file:"QFile/CounterLabel"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"using-chips"},on:{click:function(t){return e.copyHeading("using-chips")}}},[e._v("Using chips")]),i("doc-example",{attrs:{title:"With chips",file:"QFile/WithChips"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"using-file-slot"},on:{click:function(t){return e.copyHeading("using-file-slot")}}},[e._v("Using file slot")]),i("p",[e._v("The example below highlights how you can customize the display of each file and even incorporate a possible upload progress indicator:")]),i("doc-example",{attrs:{title:"With progress indicator",file:"QFile/WithProgress"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"restricting-files"},on:{click:function(t){return e.copyHeading("restricting-files")}}},[e._v("Restricting files")]),i("doc-example",{attrs:{title:"Basic restrictions",file:"QFile/RestrictionBasic"}}),i("p",[e._v("You can even combine the restrictions above.")]),i("div",{staticClass:"doc-note doc-note--tip"},[i("p",{staticClass:"doc-note__title"},[e._v("TIP")]),i("p",[e._v("In the example above, we’re using "),i("code",{staticClass:"doc-token"},[e._v("accept")]),e._v(" property. Its value must be a comma separated list of unique file type specifiers. Maps to ‘accept’ attribute of native input type=file element. "),i("doc-link",{attrs:{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers"}},[e._v("More info")]),e._v(".")],1)]),i("div",{staticClass:"doc-note doc-note--warning"},[i("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),i("p",[e._v("Recommended format for the "),i("code",{staticClass:"doc-token"},[e._v("accept")]),e._v(" property is "),i("code",{staticClass:"doc-token"},[e._v("<mediatype>/<extension>")]),e._v(". Examples: “image/png”, “image/png”. QFile uses an "),i("code",{staticClass:"doc-token"},[e._v('<input type="file">')]),e._v(" under the covers and it relies entirely on the host browser to trigger the file picker. If the "),i("code",{staticClass:"doc-token"},[e._v("accept")]),e._v(" property (that gets applied to the input) is not correct, no file picker will appear on screen or it will appear but it will accept all file types.")])]),i("p",[e._v("You can also apply custom filters (which are executed after user picks files):")]),i("doc-example",{attrs:{title:"Filter",file:"QFile/RestrictionFilter"}}),i("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"native-form-submit"},on:{click:function(t){return e.copyHeading("native-form-submit")}}},[e._v("Native form submit "),i("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),i("p",[e._v("When dealing with a native form which has an "),i("code",{staticClass:"doc-token"},[e._v("action")]),e._v(" and a "),i("code",{staticClass:"doc-token"},[e._v("method")]),e._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),i("code",{staticClass:"doc-token"},[e._v("name")]),e._v(" property on QFile, otherwise formData will not contain it (if it should):")]),i("doc-example",{attrs:{title:"Native form",file:"QFile/NativeForm"}})],1)},a=[],s=i("8669"),l={name:"DocMarkdownPage",created:function(){this.metaTitle="File Picker",this.metaDesc="The QFile Vue component is used as a file picker.",this.related=[{name:"Uploader",category:"Vue Components",path:"/vue-components/uploader"},{name:"Input Textfield",category:"Form Components",path:"/vue-components/input"}],this.nav=[{name:"Select",category:"Form Components",path:"/vue-components/select",dir:"left"},{name:"Form",category:"Form Components",path:"/vue-components/form",dir:"right"}],this.badge="v1.8+",this.toc=[{id:"qfile-api",title:"QFile API"},{id:"design",title:"Design"},{id:"decorators",title:"Decorators",sub:!0},{id:"coloring",title:"Coloring",sub:!0},{id:"clearable",title:"Clearable",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"appending-files",title:"Appending files",sub:!0},{id:"counters",title:"Counters",sub:!0},{id:"using-chips",title:"Using chips",sub:!0},{id:"using-file-slot",title:"Using file slot",sub:!0},{id:"restricting-files",title:"Restricting files",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],this.copyHeading=s["a"]}},n=l,c=i("2877"),r=Object(c["a"])(n,o,a,!1,null,null,null);t["default"]=r.exports}}]);