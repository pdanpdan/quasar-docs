(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[266],{"1f55":function(t,e,o){"use strict";o.r(e);var a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("doc-page",{attrs:{title:"Toggle",related:t.related,nav:t.nav}},[o("p",[t._v("The QToggle component is another basic element for user input. You can use this for turning settings, features or true/false inputs on and off.")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("Please also refer to the "),o("doc-link",{attrs:{to:"/vue-components/option-group"}},[t._v("QOptionGroup")]),t._v(" on other possibilities for creating groups of Checkboxes.")],1)]),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Installation"},on:{click:function(e){return t.copyHeading("Installation")}}},[t._v("Installation")]),o("doc-installation",{attrs:{components:"QToggle"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Usage"},on:{click:function(e){return t.copyHeading("Usage")}}},[t._v("Usage")]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Basic"},on:{click:function(e){return t.copyHeading("Basic")}}},[t._v("Basic")]),o("p",[t._v("Use the "),o("code",{staticClass:"doc-token"},[t._v("color")]),t._v(" prop to control the toggle’s color.")]),o("doc-example",{attrs:{title:"Basic",file:"QToggle/Standard"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"With-labels"},on:{click:function(e){return t.copyHeading("With-labels")}}},[t._v("With labels")]),o("doc-example",{attrs:{title:"With labels",file:"QToggle/Labels"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Keeping-color"},on:{click:function(e){return t.copyHeading("Keeping-color")}}},[t._v("Keeping color")]),o("doc-example",{attrs:{title:"Keep color",file:"QToggle/KeepColor"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"With-icons"},on:{click:function(e){return t.copyHeading("With-icons")}}},[t._v("With icons")]),o("doc-example",{attrs:{title:"Icons",file:"QToggle/Icons"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Custom-model-values"},on:{click:function(e){return t.copyHeading("Custom-model-values")}}},[t._v("Custom model values")]),o("p",[t._v("Instead of the default "),o("code",{staticClass:"doc-token"},[t._v("true")]),t._v("/"),o("code",{staticClass:"doc-token"},[t._v("false")]),t._v(" values, you can use custom ones.")]),o("doc-example",{attrs:{title:"Custom model values",file:"QToggle/CustomValues"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Indeterminate-state"},on:{click:function(e){return t.copyHeading("Indeterminate-state")}}},[t._v("Indeterminate state "),o("q-badge",{attrs:{align:"top",label:"v1.8+"}})],1),o("p",[t._v("In the example below, as soon as you click on the first QToggle it starts toggling between true/false. The second QToggle, on the other hand toggles between the three states (indeterminate/true/false) with help from "),o("code",{staticClass:"doc-token"},[t._v("toggle-indeterminate")]),t._v(". You can optionally set the property "),o("code",{staticClass:"doc-token"},[t._v("indeterminate-value")]),t._v(", otherwise the indeterminate value will be considered "),o("code",{staticClass:"doc-token"},[t._v("null")]),t._v(".")]),o("doc-example",{attrs:{title:"Indeterminate state",file:"QToggle/IndeterminateState"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Toggle-order"},on:{click:function(e){return t.copyHeading("Toggle-order")}}},[t._v("Toggle order "),o("q-badge",{attrs:{align:"top",label:"v1.12+"}})],1),o("p",[t._v("By default, QToggle follows this chain when toggling: indeterminate -> checked -> unchecked. However, you can change this behavior through the "),o("code",{staticClass:"doc-token"},[t._v("toggle-order")]),t._v(" prop. This property determines the order of the states and can be "),o("code",{staticClass:"doc-token"},[t._v("tf")]),t._v(" (default) or "),o("code",{staticClass:"doc-token"},[t._v("ft")]),t._v(" ("),o("code",{staticClass:"doc-token"},[t._v("t")]),t._v(" stands for state of true/checked while "),o("code",{staticClass:"doc-token"},[t._v("f")]),t._v(" for state of false/unchecked).")]),o("p",[t._v("Toggling order is:")]),o("ul",[o("li",[t._v("if "),o("code",{staticClass:"doc-token"},[t._v("toggle-indeterminate")]),t._v(" is true, then: indet -> first state -> second state -> indet (and repeat)")]),o("li",[t._v("otherwise (no toggle-indeterminate): indet -> first state -> second state -> first state -> second state -> …")])]),o("doc-example",{attrs:{title:"Toggle order",file:"QToggle/ToggleOrder"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Array-model"},on:{click:function(e){return t.copyHeading("Array-model")}}},[t._v("Array model")]),o("p",[t._v("If you have a number of toggles for a selection, use can use an Array as the model for all of them and specify "),o("code",{staticClass:"doc-token"},[t._v("val")]),t._v(" prop on each toggle. If the toggle is ticked, its "),o("code",{staticClass:"doc-token"},[t._v("val")]),t._v(" will be inserted into the array and vice versa.")]),o("doc-example",{attrs:{title:"Array model",file:"QToggle/ArrayValue"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Dark-and-disable"},on:{click:function(e){return t.copyHeading("Dark-and-disable")}}},[t._v("Dark and disable")]),o("doc-example",{attrs:{title:"On a dark background",file:"QToggle/DarkBackground",dark:""}}),o("doc-example",{attrs:{title:"Disabled state",file:"QToggle/Disabled"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Sizes"},on:{click:function(e){return t.copyHeading("Sizes")}}},[t._v("Sizes "),o("q-badge",{attrs:{align:"top",label:"v1.8+"}})],1),o("p",[t._v("Apart from the standard sizes below, you can define your own through the "),o("code",{staticClass:"doc-token"},[t._v("size")]),t._v(" property (last one is a custom size).")]),o("doc-example",{attrs:{title:"Standard sizes",file:"QToggle/StandardSizes"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"With-QOptionGroup"},on:{click:function(e){return t.copyHeading("With-QOptionGroup")}}},[t._v("With QOptionGroup")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("You can also use "),o("doc-link",{attrs:{to:"/vue-components/option-group"}},[t._v("QOptionGroup")]),t._v(", which simplifies the usage when you have groups of toggles, like in example below.")],1)]),o("doc-example",{attrs:{title:"Usage with QOptionGroup",file:"QToggle/OptionGroup"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"With-QItem"},on:{click:function(e){return t.copyHeading("With-QItem")}}},[t._v("With QItem")]),o("doc-example",{attrs:{title:"With QItem",file:"QToggle/List"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Native-form-submit"},on:{click:function(e){return t.copyHeading("Native-form-submit")}}},[t._v("Native form submit "),o("q-badge",{attrs:{align:"top",label:"v1.9+"}})],1),o("p",[t._v("When dealing with a native form which has an "),o("code",{staticClass:"doc-token"},[t._v("action")]),t._v(" and a "),o("code",{staticClass:"doc-token"},[t._v("method")]),t._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),o("code",{staticClass:"doc-token"},[t._v("name")]),t._v(" property on QToggle, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")]),o("doc-example",{attrs:{title:"Native form",file:"QToggle/NativeForm"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"QToggle-API"},on:{click:function(e){return t.copyHeading("QToggle-API")}}},[t._v("QToggle API")]),o("doc-api",{attrs:{file:"QToggle"}})],1)},i=[],s=o("8669");const n="Toggle | Quasar Framework",l="The QToggle component is a basic element for user input. You can use it for turning settings, features or true/false inputs on and off.";var c={meta:{title:"Toggle",meta:{title:{name:"title",content:n},ogTitle:{name:"og:title",content:n},twitterTitle:{name:"twitter:title",content:n},description:{name:"description",content:l},ogDesc:{name:"og:description",content:l},twitterDesc:{name:"twitter:description",content:l}}},created(){this.$root.store.toc=[{id:"Installation",title:"Installation"},{id:"Usage",title:"Usage"},{id:"Basic",title:"Basic",sub:!0},{id:"With-labels",title:"With labels",sub:!0},{id:"Keeping-color",title:"Keeping color",sub:!0},{id:"With-icons",title:"With icons",sub:!0},{id:"Custom-model-values",title:"Custom model values",sub:!0},{id:"Indeterminate-state",title:"Indeterminate state",sub:!0},{id:"Toggle-order",title:"Toggle order",sub:!0},{id:"Array-model",title:"Array model",sub:!0},{id:"Dark-and-disable",title:"Dark and disable",sub:!0},{id:"Sizes",title:"Sizes",sub:!0},{id:"With-QOptionGroup",title:"With QOptionGroup",sub:!0},{id:"With-QItem",title:"With QItem",sub:!0},{id:"Native-form-submit",title:"Native form submit",sub:!0},{id:"QToggle-API",title:"QToggle API"}],this.related=[{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle"}],this.nav=[{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox",dir:"left"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle",dir:"right"}]},methods:{copyHeading:s["a"]}},r=c,d=o("2877"),g=Object(d["a"])(r,a,i,!1,null,null,null);e["default"]=g.exports}}]);