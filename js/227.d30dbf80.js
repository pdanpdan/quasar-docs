(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[227],{"3b9c":function(a,t,e){"use strict";e.r(t);var n=function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("doc-page",{attrs:{"meta-title":a.metaTitle,title:"Floating Action Button",related:a.related,nav:a.nav,toc:a.toc,"meta-desc":a.metaDesc}},[e("p",[a._v("A Floating Action Button (FAB) represents the primary action in a Page. But, it’s not limited to only a single action. It can contain any number of sub-actions too. And more importantly, it can also be used inline in your Pages or Layouts.")]),e("p",[a._v("Note that you don’t need a QLayout to use FABs.")]),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qfab-api"},on:{click:function(t){return a.copyHeading("qfab-api")}}},[a._v("QFab API")]),e("doc-api",{attrs:{file:"QFab"}}),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qfabaction-api"},on:{click:function(t){return a.copyHeading("qfabaction-api")}}},[a._v("QFabAction API")]),e("doc-api",{attrs:{file:"QFabAction"}}),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(t){return a.copyHeading("usage")}}},[a._v("Usage")]),e("p",[a._v("There are two types of FABs: expandable (has sub-actions) and non-expandable.")]),e("div",{staticClass:"doc-note doc-note--tip"},[e("p",{staticClass:"doc-note__title"},[a._v("TIP")]),e("p",[a._v("For an exhausting list of options, please read the API cards (at the top of this page).")])]),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"non-expandable"},on:{click:function(t){return a.copyHeading("non-expandable")}}},[a._v("Non-Expandable")]),e("p",[a._v("If you want a non-expandable FAB, all you need is a round button – wrapped in QPageSticky if used on a QLayout.")]),e("doc-example",{attrs:{title:"Non expandable",file:"QFab/NonExpandable"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"expandable"},on:{click:function(t){return a.copyHeading("expandable")}}},[a._v("Expandable")]),e("doc-example",{attrs:{title:"Expandable",file:"QFab/Expandable"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"internal-labels"},on:{click:function(t){return a.copyHeading("internal-labels")}}},[a._v("Internal labels "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),e("doc-example",{attrs:{title:"Internal label",file:"QFab/InternalLabel"}}),e("doc-example",{attrs:{title:"Toggling internal label",file:"QFab/InternalLabelToggling"}}),e("p",[a._v("When the labels are internal and your QFab opens up vertically (up or down) then you also have the ability to choose how to vertically align the sub-actions:")]),e("doc-example",{attrs:{title:"Vertical actions alignment",file:"QFab/VerticalActionsAlignment"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"external-labels"},on:{click:function(t){return a.copyHeading("external-labels")}}},[a._v("External labels "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),e("p",[a._v("By default, when the label is external on the main QFab (not the sub-actions), it gets shown only when QFab is opened. However, you can override that by setting a Boolean value for "),e("code",{staticClass:"doc-token"},[a._v("hide-label")]),a._v(" prop.")]),e("doc-example",{attrs:{title:"External label",file:"QFab/ExternalLabel"}}),e("doc-example",{attrs:{title:"Custom styled external label",file:"QFab/ExternalLabelStyled"}}),e("doc-example",{attrs:{title:"Toggling external label",file:"QFab/ExternalLabelToggling"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"hide-icons"},on:{click:function(t){return a.copyHeading("hide-icons")}}},[a._v("Hide icons "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9.14+"}})],1),e("p",[a._v("If we hide the icon (through specific prop), we should at least use an internal label:")]),e("doc-example",{attrs:{title:"Hide icon",file:"QFab/HideIcon"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"padding"},on:{click:function(t){return a.copyHeading("padding")}}},[a._v("Padding "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.11+"}})],1),e("p",[a._v("The default padding for QFab is “md” and for QFabAction is “sm”. However, you can use "),e("code",{staticClass:"doc-token"},[a._v("padding")]),a._v(" prop to customize it (accepts CSS units too):")]),e("doc-example",{attrs:{title:"Playing with padding",file:"QFab/Padding"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"square-style"},on:{click:function(t){return a.copyHeading("square-style")}}},[a._v("Square style "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),e("doc-example",{attrs:{title:"Square style",file:"QFab/SquareStyle"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"slots"},on:{click:function(t){return a.copyHeading("slots")}}},[a._v("Slots "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.17+"}})],1),e("p",[a._v("Notice the slots for QFab and the slots for QFabAction below:")]),e("doc-example",{attrs:{title:"Slots: icon, active-icon and label",file:"QFab/FabSlots"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-qpagesticky"},on:{click:function(t){return a.copyHeading("with-qpagesticky")}}},[a._v("With QPageSticky")]),e("doc-example",{attrs:{title:"With QPageSticky",file:"QFab/PageSticky"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"draggable"},on:{click:function(t){return a.copyHeading("draggable")}}},[a._v("Draggable")]),e("p",[a._v("Below is a nice example of using "),e("doc-link",{attrs:{to:"/vue-directives/touch-pan"}},[a._v("TouchPan")]),a._v(" for making the QFab draggable across the screen.")],1),e("doc-example",{attrs:{title:"Draggable",file:"QFab/Draggable"}})],1)},i=[],o=e("8669"),l={name:"DocMarkdownPage",created:function(){this.metaTitle="Floating Action Button",this.metaDesc="How to use the QFab component. Floating Action Buttons for your Quasar app.",this.related=[{name:"Layout",category:"Layout and Grid",path:"/layout/layout"},{name:"Layout Page",category:"Layout and Grid",path:"/layout/page"}],this.nav=[{name:"Expansion Item",category:"Vue Components",path:"/vue-components/expansion-item",dir:"left"},{name:"Input Textfield",category:"Form Components",path:"/vue-components/input",dir:"right"}],this.toc=[{id:"qfab-api",title:"QFab API"},{id:"qfabaction-api",title:"QFabAction API"},{id:"usage",title:"Usage"},{id:"non-expandable",title:"Non-Expandable",sub:!0},{id:"expandable",title:"Expandable",sub:!0},{id:"internal-labels",title:"Internal labels",sub:!0},{id:"external-labels",title:"External labels",sub:!0},{id:"hide-icons",title:"Hide icons",sub:!0},{id:"padding",title:"Padding",sub:!0},{id:"square-style",title:"Square style",sub:!0},{id:"slots",title:"Slots",sub:!0},{id:"with-qpagesticky",title:"With QPageSticky",sub:!0},{id:"draggable",title:"Draggable",sub:!0}],this.copyHeading=o["a"]}},s=l,c=e("2877"),d=Object(c["a"])(s,n,i,!1,null,null,null);t["default"]=d.exports}}]);