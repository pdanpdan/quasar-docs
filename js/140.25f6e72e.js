(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[140],{"8f26":function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e._self._c;return t("doc-page",{attrs:{"meta-title":e.metaTitle,title:"Client Side Hydration",nav:e.nav,toc:e.toc,"meta-desc":e.metaDesc}},[t("p",[e._v("Hydration refers to the client-side process during which Vue takes over the static HTML sent by the server and turns it into dynamic DOM that can react to client-side data changes.")]),t("p",[e._v("Since the server has already rendered the markup, we obviously do not want to throw that away and re-create all the DOM elements. Instead, we want to “hydrate” the static markup and make it interactive.")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("In development mode, Vue will assert the client-side generated virtual DOM tree matches the DOM structure rendered from the server. If there is a mismatch, it will bail hydration, discard existing DOM and render from scratch. "),t("strong",[e._v("In production mode, this assertion is disabled for maximum performance.")])])]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"hydration-caveats"},on:{click:function(t){return e.copyHeading("hydration-caveats")}}},[e._v("Hydration Caveats")]),t("p",[e._v("One thing to be aware of when using SSR + client hydration is some special HTML structures that may be altered by the browser. For example, when you write this in a Vue template:")]),t("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[t("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("table")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("tr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("td")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("hi"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("td")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("tr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("table")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])]),t("p",[e._v("The browser will automatically inject "),t("code",{staticClass:"doc-token"},[e._v("<tbody>")]),e._v(" inside "),t("code",{staticClass:"doc-token"},[e._v("<table>")]),e._v(", however, the virtual DOM generated by Vue does not contain "),t("code",{staticClass:"doc-token"},[e._v("<tbody>")]),e._v(", so it will cause a mismatch. To ensure correct matching, make sure to write valid HTML in your templates.")]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"handling-hydration-errors"},on:{click:function(t){return e.copyHeading("handling-hydration-errors")}}},[e._v("Handling Hydration Errors")]),t("p",[e._v("If you do receive hydration errors (as seen in console: “Vuejs Error - The client-side rendered virtual DOM tree is not matching server-rendered content”), you can try following these steps:")]),t("ol",[t("li",[e._v("Show DevTools in Chrome (F12)")]),t("li",[e._v("Load the page that causes “the client-side rendered virtual DOM tree…” warning.")]),t("li",[e._v("Scroll to the warning in DevTools console.")]),t("li",[e._v("Click at the source location hyperlink of the warning in vue.runtime.esm.js.")]),t("li",[e._v("Set a breakpoint there (left-clicking at line number in the source code browser).")]),t("li",[e._v("Make the same warning appear again. Usually by reloading the page. If there are many warnings, you can check the message by moving a mouse over "),t("code",{staticClass:"doc-token"},[e._v("msg")]),e._v(" variable.")]),t("li",[e._v("When you have found your message and stopped on a breakpoint, look at the "),t("em",[e._v("call stack")]),e._v(". Click one frame down to call to “patch” to open its source. Hover mouse over hydrate function call 4 lines above the execution line in patch. Hyperlink to the source of hydrate would open.")]),t("li",[e._v("In the hydrate function, move about 15 lines from the start and set a breakpoint where false is returned after "),t("code",{staticClass:"doc-token"},[e._v("assertNodeMatch")]),e._v(" returned "),t("code",{staticClass:"doc-token"},[e._v("false")]),e._v(". Set the breakpoint there and remove all other breakpoints.")]),t("li",[e._v("Make the same warning happen again. Now, when breakpoint is hit, execution should stop in the hydrate function. Switch to DevTools console and evaluate "),t("code",{staticClass:"doc-token"},[e._v("elm")]),e._v(" and then "),t("code",{staticClass:"doc-token"},[e._v("vnode")]),e._v(". Here "),t("code",{staticClass:"doc-token"},[e._v("elm")]),e._v(" seems to be a "),t("em",[e._v("server-rendered DOM element")]),e._v(" while "),t("code",{staticClass:"doc-token"},[e._v("vnode")]),e._v(" is a "),t("em",[e._v("virtual DOM node")]),e._v(". "),t("code",{staticClass:"doc-token"},[e._v("Elm")]),e._v(" is printed as HTML so you can figure out where the error happened.")])])])},s=[],r=a("8669"),o={name:"DocMarkdownPage",created:function(){this.metaTitle="Client Side Hydration",this.metaDesc="What hydration is and its caveats in a Quasar server-side rendered app.",this.nav=[{name:"SEO for SSR",category:"Developing SSR",path:"/quasar-cli/developing-ssr/seo-for-ssr",dir:"left"},{name:"Handling 404 and 500 Errors",category:"Developing SSR",path:"/quasar-cli/developing-ssr/handling-404-and-500-errors",dir:"right"}],this.toc=[{id:"hydration-caveats",title:"Hydration Caveats"},{id:"handling-hydration-errors",title:"Handling Hydration Errors"}],this.copyHeading=r["a"]}},i=o,c=a("2877"),l=Object(c["a"])(i,n,s,!1,null,null,null);t["default"]=l.exports}}]);