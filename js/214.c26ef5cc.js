(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[214],{d6b3:function(t,e,o){"use strict";o.r(e);var n=function(){var t=this,e=t._self._c;return e("doc-page",{attrs:{"meta-title":t.metaTitle,title:"Button Toggle",related:t.related,nav:t.nav,toc:t.toc,"meta-desc":t.metaDesc}},[e("p",[t._v("The QBtnToggle component is another basic element for user input, similar to QRadio but with buttons. You can use this to supply a way for the user to pick an option from multiple choices.")]),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qbtntoggle-api"},on:{click:function(e){return t.copyHeading("qbtntoggle-api")}}},[t._v("QBtnToggle API")]),e("doc-api",{attrs:{file:"QBtnToggle"}}),e("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(e){return t.copyHeading("usage")}}},[t._v("Usage")]),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"basic"},on:{click:function(e){return t.copyHeading("basic")}}},[t._v("Basic")]),e("doc-example",{attrs:{title:"Basic",file:"QBtnToggle/Basic"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"design"},on:{click:function(e){return t.copyHeading("design")}}},[t._v("Design")]),e("div",{staticClass:"doc-note doc-note--tip"},[e("p",{staticClass:"doc-note__title"},[t._v("TIP")]),e("p",[t._v("Since QBtnToggle uses QBtn, you can use design related props of QBtn to style this component.")])]),e("doc-example",{attrs:{title:"Some design examples",file:"QBtnToggle/Design"}}),e("doc-example",{attrs:{title:"Spread horizontally",file:"QBtnToggle/Spread"}}),e("doc-example",{attrs:{title:"On a dark background",file:"QBtnToggle/Dark",dark:""}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"custom-content"},on:{click:function(e){return t.copyHeading("custom-content")}}},[t._v("Custom content")]),e("p",[t._v("First QBtnToggle below has tooltips on each button. Second QBtnToggle has customized the content. Notice the "),e("code",{staticClass:"doc-token"},[t._v("slot")]),t._v(" prop in the "),e("code",{staticClass:"doc-token"},[t._v("options")]),t._v(" Object definition. When you use this "),e("code",{staticClass:"doc-token"},[t._v("slot")]),t._v(" prop, you donâ€™t necessary need the "),e("code",{staticClass:"doc-token"},[t._v("label")]),t._v("/"),e("code",{staticClass:"doc-token"},[t._v("icon")]),t._v(" props in "),e("code",{staticClass:"doc-token"},[t._v("options")]),t._v(".")]),e("doc-example",{attrs:{title:"Custom buttons content",file:"QBtnToggle/CustomContent"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"disable-and-readonly"},on:{click:function(e){return t.copyHeading("disable-and-readonly")}}},[t._v("Disable and readonly")]),e("doc-example",{attrs:{title:"Disable and readonly",file:"QBtnToggle/DisableReadonly"}}),e("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"native-form-submit"},on:{click:function(e){return t.copyHeading("native-form-submit")}}},[t._v("Native form submit "),e("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),e("p",[t._v("When dealing with a native form which has an "),e("code",{staticClass:"doc-token"},[t._v("action")]),t._v(" and a "),e("code",{staticClass:"doc-token"},[t._v("method")]),t._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),e("code",{staticClass:"doc-token"},[t._v("name")]),t._v(" property on QBtnToggle, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")]),e("doc-example",{attrs:{title:"Native form",file:"QBtnToggle/NativeForm"}})],1)},a=[],i=o("8669"),s={name:"DocMarkdownPage",created:function(){this.metaTitle="Button Toggle",this.metaDesc="The QBtnToggle Vue component is a basic element for user input, similar to QRadio but with buttons.",this.related=[{name:"Button",category:"Buttons",path:"/vue-components/button"},{name:"Tabs",category:"Vue Components",path:"/vue-components/tabs"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Toggle",category:"Form Components",path:"/vue-components/toggle"}],this.nav=[{name:"Toggle",category:"Form Components",path:"/vue-components/toggle",dir:"left"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group",dir:"right"}],this.toc=[{id:"qbtntoggle-api",title:"QBtnToggle API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"design",title:"Design",sub:!0},{id:"custom-content",title:"Custom content",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],this.copyHeading=i["a"]}},c=s,l=o("2877"),d=Object(l["a"])(c,n,a,!1,null,null,null);e["default"]=d.exports}}]);