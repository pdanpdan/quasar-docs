(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[203],{f9b0:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("doc-page",{attrs:{"meta-title":s.metaTitle,title:"Stylus Variables",related:s.related,nav:s.nav,toc:s.toc,"meta-desc":s.metaDesc}},[a("p",[s._v("There are Stylus variables built into Quasar that you can change and/or use within devland should you wish to. This applies to apps built with Quasar CLI or Vue CLI only. It does NOT apply to UMD.")]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(t){return s.copyHeading("usage")}}},[s._v("Usage")]),a("p",[s._v("In your app’s "),a("code",{staticClass:"doc-token"},[s._v("*.vue")]),s._v(" files or in the stylus files you can use any Quasar Stylus variables (examples: "),a("code",{staticClass:"doc-token"},[s._v("$primary")]),s._v(", "),a("code",{staticClass:"doc-token"},[s._v("$red-1")]),s._v("), and any other Stylus variables that you declared in your "),a("code",{staticClass:"doc-token"},[s._v("/src/css/quasar.variables.styl")]),s._v(" (when using Quasar CLI) and "),a("code",{staticClass:"doc-token"},[s._v("src/styles/quasar.variables.styl")]),s._v(" (when using Vue CLI).")]),a("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('\x3c!-- Notice lang="stylus" --\x3e')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("stylus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\ndiv\n  color $red-1\n  background-color $grey-5\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),a("div",{staticClass:"doc-note doc-note--warning"},[a("p",{staticClass:"doc-note__title"},[s._v("WARNING")]),a("p",[a("strong",[s._v("If using Vue CLI")]),s._v(", then you need to also add: "),a("code",{staticClass:"doc-token"},[s._v("@import '~quasar-variables'")]),s._v(" before using any Stylus variables.")])]),a("div",{staticClass:"doc-note doc-note--tip"},[a("p",{staticClass:"doc-note__title"},[s._v("TIP")]),a("p",[s._v("Starting with "),a("code",{staticClass:"doc-token"},[s._v("@quasar/app")]),s._v(" v1.1+, you don’t need to necessarily have the "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.styl")]),s._v(" file if you want to access the Quasar Stylus variables. Create it only if you want to customize the variables.")])]),a("div",{staticClass:"doc-note doc-note--danger"},[a("p",{staticClass:"doc-note__title"},[s._v("WARNING")]),a("p",[s._v("When creating or deleting any of the "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.*")]),s._v(" files, you will need to restart your devserver in order for it to take effect. However, when you change the content of these files it won’t be necessary to also restart.")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"caveat"},on:{click:function(t){return s.copyHeading("caveat")}}},[s._v("Caveat")]),a("p",[s._v("Quasar CLI detects if the file contains at least one ‘$’ character, and if so, it automatically imports the Quasar stylus variables.")]),a("p",[s._v("If, however, you have a nested importing statement and the file from which you are importing does not contain any ‘$’ characters, this won’t work. In this case, you need to add a simple comment ("),a("code",{staticClass:"doc-token"},[s._v("// $")]),s._v(") so Quasar can detect at least one ‘$’ character:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("stylus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n// $\n\n@import "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some-file'")]),s._v("\n// now some-file.styl can benefit\n// from Quasar stylus variables too\n// due to comment above\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),a("p",[s._v("Same is required for stylus files that are included from quasar.conf.js > css.")]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"customizing"},on:{click:function(t){return s.copyHeading("customizing")}}},[s._v("Customizing")]),a("p",[s._v("Depending on whether you are using Quasar CLI or Vue CLI, you will notice that your project folder has "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.styl")]),s._v(" (Quasar CLI) or "),a("code",{staticClass:"doc-token"},[s._v("src/styles/quasar.variables.styl")]),s._v(" (Vue CLI).")]),a("p",[s._v("You can freely override any of Quasar’s variables (see next section) in those files. For convenience, if you picked Stylus when you created your Quasar project folder, this file initially contains only the brand color-related variables.")]),a("div",{staticClass:"doc-note doc-note--tip"},[a("p",{staticClass:"doc-note__title"},[s._v("TIP")]),a("p",[s._v("Quasar is very easy to customize without the need of tampering with the Stylus variables, so make sure that you really need to do that. Not having this file will actually speed up your build while the default variables will still be supplied to .sass/.scss/.vue files.")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"quasars-css"},on:{click:function(t){return s.copyHeading("quasars-css")}}},[s._v("Quasar’s CSS")]),a("p",[s._v("Quasar’s own CSS is compiled using the variables file (if it exists), but you can also use "),a("doc-link",{attrs:{to:"/style/sass-scss-variables"}},[s._v("Sass/SCSS variables")]),s._v(". So there has to be a priority list for Quasar CLI:")],1),a("ul",[a("li",[s._v("Does "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.styl")]),s._v(" exists? Use that.")]),a("li",[s._v("If not, then does "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.scss")]),s._v(" exists? Use that.")]),a("li",[s._v("If not, then does "),a("code",{staticClass:"doc-token"},[s._v("src/css/quasar.variables.sass")]),s._v(" exists? Use that.")]),a("li",[s._v("If not, then use pre-compiled Quasar CSS.")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"variables-list"},on:{click:function(t){return s.copyHeading("variables-list")}}},[s._v("Variables list")]),a("stylus-variables")],1)},n=[],o=a("8669"),r=function(){var s=this,t=s.$createElement,a=s._self._c||t;return s.ready?a("q-card",{attrs:{flat:"",bordered:""}},[a("doc-code",{attrs:{lang:"markup",code:s.file}})],1):s._e()},c=[],i=(a("e260"),a("d3b7"),a("e6cf"),a("3ca3"),a("ddb0"),a("0035")),l={name:"StylusVariables",components:{DocCode:i["a"]},data:function(){return{ready:!1}},mounted:function(){var s=this;a.e(0).then(a.bind(null,"3f25")).then((function(t){s.file=t.default,s.ready=!0}))}},u=l,d=a("2877"),p=Object(d["a"])(u,r,c,!1,null,null,null),v=p.exports,_={name:"DocMarkdownPage",components:{StylusVariables:v},created:function(){this.metaTitle="Stylus Variables",this.metaDesc="How to use the Stylus variables defined by Quasar.",this.related=[{name:"CSS Preprocessors",category:"Quasar CLI",path:"/quasar-cli/css-preprocessors"},{name:"Sass/SCSS Variables",category:"Style & Identity",path:"/style/sass-scss-variables"}],this.nav=[{name:"Sass/SCSS Variables",category:"Style & Identity",path:"/style/sass-scss-variables",dir:"left"},{name:"Other Helper Classes",category:"Style & Identity",path:"/style/other-helper-classes",dir:"right"}],this.toc=[{id:"usage",title:"Usage"},{id:"caveat",title:"Caveat"},{id:"customizing",title:"Customizing"},{id:"quasars-css",title:"Quasar’s CSS"},{id:"variables-list",title:"Variables list"}],this.copyHeading=o["a"]}},y=_,h=Object(d["a"])(y,e,n,!1,null,null,null);t["default"]=h.exports}}]);