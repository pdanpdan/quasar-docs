(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[123],{5767:function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("doc-page",{attrs:{"meta-title":t.metaTitle,title:"Electron Node Integration",nav:t.nav,toc:t.toc,"meta-desc":t.metaDesc}},[n("p",[t._v("Electron node integration refers to the ability of accessing Node.js resources from within the “renderer” thread (the UI). It is enabled by default in Quasar CLI, although Electron is encouraging developers to turn it off as a security precaution.")]),n("p",[t._v("As of “@quasar/app” v1.3+, you can turn off the node integration.")]),n("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"what-wont-work-when-turning-it-off"},on:{click:function(e){return t.copyHeading("what-wont-work-when-turning-it-off")}}},[t._v("What won’t work when turning it off")]),n("p",[t._v("If you turn off the node integration, then in the renderer thread you won’t be able to:")]),n("ul",[n("li",[t._v("Import Node.js packages (like “fs”, “path”, “electron”). Using “require” will trigger an error.")]),n("li",[t._v("Use "),n("code",{staticClass:"doc-token"},[t._v("__statics")]),t._v(" ("),n("doc-link",{attrs:{to:"/quasar-cli/developing-electron-apps/electron-static-assets"}},[t._v("more info")]),t._v(").")],1),n("li",[t._v("Use "),n("code",{staticClass:"doc-token"},[t._v("this.$q.electron")]),t._v(" (as an alias to "),n("code",{staticClass:"doc-token"},[t._v("electron")]),t._v(" Object) in your .vue files.")])]),n("p",[t._v("Example of what you WON’T be able to do:")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimize")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("electron"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BrowserWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFocusedWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equivalent to:")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BrowserWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFocusedWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("However, if you will be using an "),n("doc-link",{attrs:{to:"/quasar-cli/developing-electron-apps/electron-preload-script"}},[t._v("Electron preload script")]),t._v(", you can access Node from there, regardless if Node integration is turned on or off. So basically you can inject stuff into “window” global from there.")],1),n("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"how-to-turn-it-off"},on:{click:function(e){return t.copyHeading("how-to-turn-it-off")}}},[t._v("How to turn it off")]),n("p",[t._v("Should you want to disable the node integration then you must edit /quasar.conf.js:")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /quasar.conf.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("electron")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nodeIntegration")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"doc-note doc-note--tip"},[n("p",{staticClass:"doc-note__title"},[t._v("TIP")]),n("p",[t._v("Starting with “@quasar/app” v2.0+ you can edit your main thread file to set "),n("code",{staticClass:"doc-token"},[t._v("nodeIntegration: process.env.QUASAR_NODE_INTEGRATION")]),t._v(". The "),n("code",{staticClass:"doc-token"},[t._v("QUASAR_NODE_INTEGRATION")]),t._v(" env variable is injected by Quasar so that you’ll have only one place to edit your Node Integration state: quasar.conf.js.")])]),n("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"legacy-warnings"},on:{click:function(e){return t.copyHeading("legacy-warnings")}}},[t._v("Legacy warnings")]),n("p",[n("strong",[t._v("If your version of “@quasar/app” is greater than v1.7 and lower than v2.0")]),t._v(", then you also need to use "),n("code",{staticClass:"doc-token"},[t._v("QUASAR_NODE_INTEGRATION")]),t._v(" in your main thread file (/src-electron/main-process/main.js):")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /src-electron/main-process/main.js")]),t._v("\n\nmainWindow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("webPreferences")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nodeIntegration")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("QUASAR_NODE_INTEGRATION")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),n("p",[n("strong",[t._v("If your version of “@quasar/app” is lower than v1.7")]),t._v(", then you also need to edit your main thread file (/src-electron/main-process/main.js):")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /src-electron/main-process/main.js")]),t._v("\n\nmainWindow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("webPreferences")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nodeIntegration")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),n("p",[t._v("Make sure that you keep the two configuration places in sync!")])])},s=[],o=n("8669"),r={name:"DocMarkdownPage",created:function(){this.metaTitle="Electron Node Integration",this.metaDesc="How to handle Electron Node Integration with Quasar CLI.",this.nav=[{name:"App Icons for Electron",category:"Developing Electron Apps",path:"/quasar-cli/developing-electron-apps/app-icons-electron",dir:"left"},{name:"Preload Script",category:"Developing Electron Apps",path:"/quasar-cli/developing-electron-apps/electron-preload-script",dir:"right"}],this.toc=[{id:"what-wont-work-when-turning-it-off",title:"What won’t work when turning it off"},{id:"how-to-turn-it-off",title:"How to turn it off"},{id:"legacy-warnings",title:"Legacy warnings",sub:!0}],this.copyHeading=o["a"]}},p=r,c=n("2877"),i=Object(c["a"])(p,a,s,!1,null,null,null);e["default"]=i.exports}}]);