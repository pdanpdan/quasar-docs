(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[272],{"1f55":function(e,t,o){"use strict";o.r(t);var a=function(){var e=this,t=e._self._c;return t("doc-page",{attrs:{"meta-title":e.metaTitle,title:"Toggle",related:e.related,nav:e.nav,toc:e.toc,"meta-desc":e.metaDesc}},[t("p",[e._v("The QToggle component is another basic element for user input. You can use this for turning settings, features or true/false inputs on and off.")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("Please also refer to the "),t("doc-link",{attrs:{to:"/vue-components/option-group"}},[e._v("QOptionGroup")]),e._v(" on other possibilities for creating groups of Checkboxes.")],1)]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qtoggle-api"},on:{click:function(t){return e.copyHeading("qtoggle-api")}}},[e._v("QToggle API")]),t("doc-api",{attrs:{file:"QToggle"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"usage"},on:{click:function(t){return e.copyHeading("usage")}}},[e._v("Usage")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"basic"},on:{click:function(t){return e.copyHeading("basic")}}},[e._v("Basic")]),t("p",[e._v("Use the "),t("code",{staticClass:"doc-token"},[e._v("color")]),e._v(" prop to control the toggle’s color.")]),t("doc-example",{attrs:{title:"Basic",file:"QToggle/Standard"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-labels"},on:{click:function(t){return e.copyHeading("with-labels")}}},[e._v("With labels")]),t("doc-example",{attrs:{title:"With labels",file:"QToggle/Labels"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"keeping-color"},on:{click:function(t){return e.copyHeading("keeping-color")}}},[e._v("Keeping color")]),t("doc-example",{attrs:{title:"Keep color",file:"QToggle/KeepColor"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-icons"},on:{click:function(t){return e.copyHeading("with-icons")}}},[e._v("With icons")]),t("doc-example",{attrs:{title:"Icons",file:"QToggle/Icons"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"custom-model-values"},on:{click:function(t){return e.copyHeading("custom-model-values")}}},[e._v("Custom model values")]),t("p",[e._v("Instead of the default "),t("code",{staticClass:"doc-token"},[e._v("true")]),e._v("/"),t("code",{staticClass:"doc-token"},[e._v("false")]),e._v(" values, you can use custom ones.")]),t("doc-example",{attrs:{title:"Custom model values",file:"QToggle/CustomValues"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"indeterminate-state"},on:{click:function(t){return e.copyHeading("indeterminate-state")}}},[e._v("Indeterminate state "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.8+"}})],1),t("p",[e._v("In the example below, as soon as you click on the first QToggle it starts toggling between true/false. The second QToggle, on the other hand toggles between the three states (indeterminate/true/false) with help from "),t("code",{staticClass:"doc-token"},[e._v("toggle-indeterminate")]),e._v(". You can optionally set the property "),t("code",{staticClass:"doc-token"},[e._v("indeterminate-value")]),e._v(", otherwise the indeterminate value will be considered "),t("code",{staticClass:"doc-token"},[e._v("null")]),e._v(".")]),t("doc-example",{attrs:{title:"Indeterminate state",file:"QToggle/IndeterminateState"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"toggle-order"},on:{click:function(t){return e.copyHeading("toggle-order")}}},[e._v("Toggle order "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.12+"}})],1),t("p",[e._v("By default, QToggle follows this chain when toggling: indeterminate -> checked -> unchecked. However, you can change this behavior through the "),t("code",{staticClass:"doc-token"},[e._v("toggle-order")]),e._v(" prop. This property determines the order of the states and can be "),t("code",{staticClass:"doc-token"},[e._v("tf")]),e._v(" (default) or "),t("code",{staticClass:"doc-token"},[e._v("ft")]),e._v(" ("),t("code",{staticClass:"doc-token"},[e._v("t")]),e._v(" stands for state of true/checked while "),t("code",{staticClass:"doc-token"},[e._v("f")]),e._v(" for state of false/unchecked).")]),t("p",[e._v("Toggling order is:")]),t("ul",[t("li",[e._v("if "),t("code",{staticClass:"doc-token"},[e._v("toggle-indeterminate")]),e._v(" is true, then: indet -> first state -> second state -> indet (and repeat)")]),t("li",[e._v("otherwise (no toggle-indeterminate): indet -> first state -> second state -> first state -> second state -> …")])]),t("doc-example",{attrs:{title:"Toggle order",file:"QToggle/ToggleOrder"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"array-model"},on:{click:function(t){return e.copyHeading("array-model")}}},[e._v("Array model")]),t("p",[e._v("If you have a number of toggles for a selection, use can use an Array as the model for all of them and specify "),t("code",{staticClass:"doc-token"},[e._v("val")]),e._v(" prop on each toggle. If the toggle is ticked, its "),t("code",{staticClass:"doc-token"},[e._v("val")]),e._v(" will be inserted into the array and vice versa.")]),t("doc-example",{attrs:{title:"Array model",file:"QToggle/ArrayValue"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"dark-and-disable"},on:{click:function(t){return e.copyHeading("dark-and-disable")}}},[e._v("Dark and disable")]),t("doc-example",{attrs:{title:"On a dark background",file:"QToggle/DarkBackground",dark:""}}),t("doc-example",{attrs:{title:"Disabled state",file:"QToggle/Disabled"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"sizes"},on:{click:function(t){return e.copyHeading("sizes")}}},[e._v("Sizes "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.8+"}})],1),t("p",[e._v("Apart from the standard sizes below, you can define your own through the "),t("code",{staticClass:"doc-token"},[e._v("size")]),e._v(" property (last one is a custom size).")]),t("doc-example",{attrs:{title:"Standard sizes",file:"QToggle/StandardSizes"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-qoptiongroup"},on:{click:function(t){return e.copyHeading("with-qoptiongroup")}}},[e._v("With QOptionGroup")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("You can also use "),t("doc-link",{attrs:{to:"/vue-components/option-group"}},[e._v("QOptionGroup")]),e._v(", which simplifies the usage when you have groups of toggles, like in example below.")],1)]),t("doc-example",{attrs:{title:"Usage with QOptionGroup",file:"QToggle/OptionGroup"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"with-qitem"},on:{click:function(t){return e.copyHeading("with-qitem")}}},[e._v("With QItem")]),t("doc-example",{attrs:{title:"With QItem",file:"QToggle/List"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"native-form-submit"},on:{click:function(t){return e.copyHeading("native-form-submit")}}},[e._v("Native form submit "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),t("p",[e._v("When dealing with a native form which has an "),t("code",{staticClass:"doc-token"},[e._v("action")]),e._v(" and a "),t("code",{staticClass:"doc-token"},[e._v("method")]),e._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{staticClass:"doc-token"},[e._v("name")]),e._v(" property on QToggle, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")]),t("doc-example",{attrs:{title:"Native form",file:"QToggle/NativeForm"}})],1)},i=[],s=o("8669"),n={name:"DocMarkdownPage",created:function(){this.metaTitle="Toggle",this.metaDesc="The QToggle component is a basic element for user input. You can use it for turning settings, features or true/false inputs on and off.",this.related=[{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox"},{name:"Option Group",category:"Form Components",path:"/vue-components/option-group"},{name:"Radio",category:"Form Components",path:"/vue-components/radio"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle"}],this.nav=[{name:"Checkbox",category:"Form Components",path:"/vue-components/checkbox",dir:"left"},{name:"Button Toggle",category:"Form Components",path:"/vue-components/button-toggle",dir:"right"}],this.toc=[{id:"qtoggle-api",title:"QToggle API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"with-labels",title:"With labels",sub:!0},{id:"keeping-color",title:"Keeping color",sub:!0},{id:"with-icons",title:"With icons",sub:!0},{id:"custom-model-values",title:"Custom model values",sub:!0},{id:"indeterminate-state",title:"Indeterminate state",sub:!0},{id:"toggle-order",title:"Toggle order",sub:!0},{id:"array-model",title:"Array model",sub:!0},{id:"dark-and-disable",title:"Dark and disable",sub:!0},{id:"sizes",title:"Sizes",sub:!0},{id:"with-qoptiongroup",title:"With QOptionGroup",sub:!0},{id:"with-qitem",title:"With QItem",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],this.copyHeading=s["a"]}},l=n,c=o("2877"),r=Object(c["a"])(l,a,i,!1,null,null,null);t["default"]=r.exports}}]);