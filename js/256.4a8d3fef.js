(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[256],{"49b8":function(e,t,o){"use strict";o.r(t);var i=function(){var e=this,t=e._self._c;return t("doc-page",{attrs:{"meta-title":e.metaTitle,title:"Select",nav:e.nav,toc:e.toc,"meta-desc":e.metaDesc}},[t("p",[e._v("The QSelect component has two types of selection: single or multiple. This component opens up a menu for the selection list and action. A filter can also be used for longer lists.")]),t("p",[e._v("In case you are looking for a dropdown “button” instead of “input” use "),t("doc-link",{attrs:{to:"/vue-components/button-dropdown"}},[e._v("Button Dropdown")]),e._v(" instead.")],1),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"qselect-api"},on:{click:function(t){return e.copyHeading("qselect-api")}}},[e._v("QSelect API")]),t("doc-api",{attrs:{file:"QSelect"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"design"},on:{click:function(t){return e.copyHeading("design")}}},[e._v("Design")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"overview"},on:{click:function(t){return e.copyHeading("overview")}}},[e._v("Overview")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("For your QSelect you can use only one of the main designs ("),t("code",{staticClass:"doc-token"},[e._v("filled")]),e._v(", "),t("code",{staticClass:"doc-token"},[e._v("outlined")]),e._v(", "),t("code",{staticClass:"doc-token"},[e._v("standout")]),e._v(", "),t("code",{staticClass:"doc-token"},[e._v("borderless")]),e._v("). You cannot use multiple as they are self-exclusive.")])]),t("doc-example",{attrs:{title:"Design Overview",file:"QSelect/DesignOverview"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"decorators"},on:{click:function(t){return e.copyHeading("decorators")}}},[e._v("Decorators")]),t("doc-example",{attrs:{title:"Decorators",file:"QSelect/Decorators"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"coloring"},on:{click:function(t){return e.copyHeading("coloring")}}},[e._v("Coloring")]),t("doc-example",{attrs:{title:"Coloring",file:"QSelect/Coloring"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"clearable"},on:{click:function(t){return e.copyHeading("clearable")}}},[e._v("Clearable")]),t("p",[e._v("As a helper, you can use "),t("code",{staticClass:"doc-token"},[e._v("clearable")]),e._v(" prop so user can reset model to "),t("code",{staticClass:"doc-token"},[e._v("null")]),e._v(" through an appended icon. The second QSelect in the example below is the equivalent of using "),t("code",{staticClass:"doc-token"},[e._v("clearable")]),e._v(".")]),t("doc-example",{attrs:{title:"Clearable",file:"QSelect/Clearable"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"disable-and-readonly"},on:{click:function(t){return e.copyHeading("disable-and-readonly")}}},[e._v("Disable and readonly")]),t("doc-example",{attrs:{title:"Disable and readonly",file:"QSelect/DisableReadonly"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"slots-with-qbtn-type-submit"},on:{click:function(t){return e.copyHeading("slots-with-qbtn-type-submit")}}},[e._v("Slots with QBtn type “submit”")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),t("code",{staticClass:"doc-token"},[e._v("@click")]),e._v(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"menu-transitions"},on:{click:function(t){return e.copyHeading("menu-transitions")}}},[e._v("Menu transitions")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("Please note that transitions do not work when using "),t("code",{staticClass:"doc-token"},[e._v("options-cover")]),e._v(" prop.")])]),t("p",[e._v("In the example below there’s a few transitions showcased. For a full list of transitions available, go to "),t("doc-link",{attrs:{to:"/options/transitions"}},[e._v("Transitions")]),e._v(".")],1),t("doc-example",{attrs:{title:"Menu transitions",file:"QSelect/MenuTransitions"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"options-list-display-mode"},on:{click:function(t){return e.copyHeading("options-list-display-mode")}}},[e._v("Options list display mode")]),t("p",[e._v("By default QSelect shows the list of options as a menu on desktop and as a dialog on mobiles. You can force one behavior by using the "),t("code",{staticClass:"doc-token"},[e._v("behavior")]),e._v(" property.")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("Please note that on iOS menu behavior might generate problems, especially when used in combination with "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" prop. You can use a conditional "),t("code",{staticClass:"doc-token"},[e._v("behavior")]),e._v(" prop like "),t("code",{staticClass:"doc-token"},[e._v(":behavior=\"$q.platform.is.ios === true ? 'dialog' : 'menu'\"")]),e._v(" to use dialog mode only on iOS.")])]),t("doc-example",{attrs:{title:"Show options in menu",file:"QSelect/BehaviorMenu"}}),t("doc-example",{attrs:{title:"Show options in dialog",file:"QSelect/BehaviorDialog"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"dialog-mode-close-icon"},on:{click:function(t){return e.copyHeading("dialog-mode-close-icon")}}},[e._v("Dialog mode close icon")]),t("doc-example",{attrs:{title:"Close icon in dialog",file:"QSelect/DialogCloseIcon"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"the-model"},on:{click:function(t){return e.copyHeading("the-model")}}},[e._v("The model")]),t("div",{staticClass:"doc-note doc-note--danger"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("The model for single selection can be anything (String, Object, …) while the model for multiple selection must be an Array.")])]),t("doc-example",{attrs:{title:"Single vs multiple selection",file:"QSelect/ModelSingleMultiple"}}),t("doc-example",{attrs:{title:"Multiple selection, counter and max-values",file:"QSelect/ModelMultipleCounter"}}),t("p",[e._v("The model content can be influenced by "),t("code",{staticClass:"doc-token"},[e._v("emit-value")]),e._v(" prop as you’ll learn in “The options” section below.")]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"the-options"},on:{click:function(t){return e.copyHeading("the-options")}}},[e._v("The options")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"options-type"},on:{click:function(t){return e.copyHeading("options-type")}}},[e._v("Options type")]),t("doc-example",{attrs:{title:"String options",file:"QSelect/OptionString"}}),t("doc-example",{attrs:{title:"Object options",file:"QSelect/OptionObject"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"affecting-model"},on:{click:function(t){return e.copyHeading("affecting-model")}}},[e._v("Affecting model")]),t("p",[e._v("When "),t("code",{staticClass:"doc-token"},[e._v("emit-value")]),e._v(" is used, the model becomes the determined "),t("code",{staticClass:"doc-token"},[e._v("value")]),e._v(" from the specified selected option. Default is to emit the whole option. It makes sense to use it only when the options are of Object form.")]),t("doc-example",{attrs:{title:"Emit-value",file:"QSelect/OptionEmitValue"}}),t("p",[e._v("When "),t("code",{staticClass:"doc-token"},[e._v("map-options")]),e._v(" is used, the model can contain only the "),t("code",{staticClass:"doc-token"},[e._v("value")]),e._v(", and it will be mapped against the options to determine its label. There is a performance penalty involved, so use it only if absolutely necessary. It’s not needed, for example, if the model contains the whole Object (so contains the label prop).")]),t("doc-example",{attrs:{title:"Map options",file:"QSelect/OptionMapOptions"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"custom-prop-names"},on:{click:function(t){return e.copyHeading("custom-prop-names")}}},[e._v("Custom prop names")]),t("p",[e._v("By default, QSelect looks at "),t("code",{staticClass:"doc-token"},[e._v("label")]),e._v(", "),t("code",{staticClass:"doc-token"},[e._v("value")]),e._v(", "),t("code",{staticClass:"doc-token"},[e._v("disable")]),e._v(" and "),t("code",{staticClass:"doc-token"},[e._v("sanitize")]),e._v(" props of each option from the options array Objects. But you can override those:")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("If you use functions for custom props always check if the option is null. These functions are used both for options in the list and for the selected options.")])]),t("doc-example",{attrs:{title:"Custom label, value and disable props",file:"QSelect/OptionCustomProps"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"customizing-menu-options"},on:{click:function(t){return e.copyHeading("customizing-menu-options")}}},[e._v("Customizing menu options")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("The list of options is rendered using virtual scroll, so if you render more than one element for an option you must set a "),t("code",{staticClass:"doc-token"},[e._v("q-virtual-scroll--with-prev")]),e._v(" class on all elements except the first one.")])]),t("doc-example",{attrs:{title:"Options slot",file:"QSelect/OptionSlot"}}),t("p",[e._v("Here is another example where we add a QToggle to each option. The possibilities are endless.")]),t("doc-example",{attrs:{title:"Object options",file:"QSelect/OptionQToggle"}}),t("p",[e._v("By default, when there are no options, the menu won’t appear. But you can customize this scenario and specify what the menu should display.")]),t("doc-example",{attrs:{title:"No options slot",file:"QSelect/OptionNoneSlot"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"lazy-loading"},on:{click:function(t){return e.copyHeading("lazy-loading")}}},[e._v("Lazy loading")]),t("p",[e._v("The following example shows a glimpse of how you can play with lazy loading the options. This means, along with many other things, that "),t("code",{staticClass:"doc-token"},[e._v("options")]),e._v(" prop is not required on first render.")]),t("doc-example",{attrs:{title:"Lazy load options",file:"QSelect/OptionLazyLoad"}}),t("p",[e._v("You can dynamically load new options when scroll reaches the end:")]),t("doc-example",{attrs:{title:"Dynamic loading options",file:"QSelect/OptionsDynamic"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"cover-mode"},on:{click:function(t){return e.copyHeading("cover-mode")}}},[e._v("Cover mode")]),t("doc-example",{attrs:{title:"Menu covering component",file:"QSelect/OptionCover"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"the-display-value"},on:{click:function(t){return e.copyHeading("the-display-value")}}},[e._v("The display value")]),t("doc-example",{attrs:{title:"Custom display value",file:"QSelect/DisplayCustomValue"}}),t("doc-example",{attrs:{title:"Chips as display value",file:"QSelect/DisplayChips"}}),t("doc-example",{attrs:{title:"Selected-item slot",file:"QSelect/DisplaySelectedItemSlot"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"filtering-and-autocomplete"},on:{click:function(t){return e.copyHeading("filtering-and-autocomplete")}}},[e._v("Filtering and autocomplete")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"native-attributes-with-use-input"},on:{click:function(t){return e.copyHeading("native-attributes-with-use-input")}}},[e._v("Native attributes with "),t("code",{staticClass:"doc-token"},[e._v("use-input")])]),t("p",[e._v("All the attributes set on QSelect that are not in the list of props in the API will be passed to the native input field used (please check "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" prop description first to understand what it does) for filtering / autocomplete / adding new value. Some examples: autocomplete, placeholder.")]),t("p",[e._v("More information: "),t("doc-link",{attrs:{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}},[e._v("native input attributes")]),e._v(".")],1),t("doc-example",{attrs:{title:"Filtering options",file:"QSelect/InputFilterOptions"}}),t("doc-example",{attrs:{title:"Basic filtering",file:"QSelect/BasicFiltering"}}),t("doc-example",{attrs:{title:"Filtering on more than 2 chars",file:"QSelect/InputFilterMin"}}),t("doc-example",{attrs:{title:"Text autocomplete",file:"QSelect/TextAutocomplete"}}),t("doc-example",{attrs:{title:"Lazy filtering",file:"QSelect/InputFilterLazy"}}),t("doc-example",{attrs:{title:"Selecting option after filtering",file:"QSelect/InputFilterAfter"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"create-new-values"},on:{click:function(t){return e.copyHeading("create-new-values")}}},[e._v("Create new values")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("The following are just a few examples to get you started into making your own QSelect behavior. This is not exhaustive list of possibilities that QSelect offers.")]),t("p",[e._v("It makes sense to use this feature along with "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" prop.")])]),t("p",[e._v("In order to enable the creation of new values, you need to "),t("strong",[e._v("either specify")]),e._v(" the "),t("code",{staticClass:"doc-token"},[e._v("new-value-mode")]),e._v(" prop "),t("strong",[e._v("and/or")]),e._v(" listen for "),t("code",{staticClass:"doc-token"},[e._v("@new-value")]),e._v(" event. If you use both, then the purpose of listening to "),t("code",{staticClass:"doc-token"},[e._v("@new-value")]),e._v(" would be only to override the "),t("code",{staticClass:"doc-token"},[e._v("new-value-mode")]),e._v(" in your custom scenarios.")]),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"the-new-value-mode-prop"},on:{click:function(t){return e.copyHeading("the-new-value-mode-prop")}}},[e._v("The new-value-mode prop")]),t("p",[e._v("The "),t("code",{staticClass:"doc-token"},[e._v("new-value-mode")]),e._v(" prop value specifies how the value should be added: "),t("code",{staticClass:"doc-token"},[e._v("add")]),e._v(" (adds a value, even if duplicate), "),t("code",{staticClass:"doc-token"},[e._v("add-unique")]),e._v(" (add only if NOT duplicate) or "),t("code",{staticClass:"doc-token"},[e._v("toggle")]),e._v(" (adds value if it’s not already in model, otherwise it removes it).")]),t("p",[e._v("By using this prop you don’t need to also listen for "),t("code",{staticClass:"doc-token"},[e._v("@new-value")]),e._v(" event, unless you have some specific scenarios for which you want to override the behavior.")]),t("doc-example",{attrs:{title:"New value mode",file:"QSelect/CreateNewValueMode"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"the-new-value-event"},on:{click:function(t){return e.copyHeading("the-new-value-event")}}},[e._v("The @new-value event")]),t("p",[e._v("The "),t("code",{staticClass:"doc-token"},[e._v("@new-value")]),e._v(" event is emitted with the value to be added and a "),t("code",{staticClass:"doc-token"},[e._v("done")]),e._v(" callback. The "),t("code",{staticClass:"doc-token"},[e._v("done")]),e._v(" callback has two "),t("strong",[e._v("optional")]),e._v(" parameters:")]),t("ul",[t("li",[e._v("the value to be added")]),t("li",[e._v("the behavior (same values of "),t("code",{staticClass:"doc-token"},[e._v("new-value-mode")]),e._v(" prop, and when it is specified it overrides that prop – if it is used) – default behavior (if not using "),t("code",{staticClass:"doc-token"},[e._v("new-value-mode")]),e._v(") is to add the value even if it would be a duplicate")])]),t("p",[e._v("Calling "),t("code",{staticClass:"doc-token"},[e._v("done()")]),e._v(" with no parameters simply empties the input box value, without tampering with the model in any way.")]),t("doc-example",{attrs:{title:"Listening on @new-value",file:"QSelect/CreateListener"}}),t("doc-example",{attrs:{title:"Adding only unique values",file:"QSelect/CreateListenerUnique"}}),t("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"using-menu-and-filtering"},on:{click:function(t){return e.copyHeading("using-menu-and-filtering")}}},[e._v("Using menu and filtering")]),t("p",[e._v("Filtering and adding the new values to menu:")]),t("doc-example",{attrs:{title:"Filtering and adding to menu",file:"QSelect/FilteringAddsToMenu"}}),t("p",[e._v("Filters new values (in the example below the value to be added requires at least 3 characters to pass), and does not add to menu:")]),t("doc-example",{attrs:{title:"Filtering without adding to menu",file:"QSelect/FilteringNoAddToMenu"}}),t("p",[e._v("Generating multiple values from input:")]),t("doc-example",{attrs:{title:"Generating multiple values",file:"QSelect/FilteringAddMultiple"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"sanitization"},on:{click:function(t){return e.copyHeading("sanitization")}}},[e._v("Sanitization")]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("Always sanitize values if you do not trust the origin (if the value comes from user input).")])]),t("p",[e._v("You can force sanitization of the menu options by:")]),t("ul",[t("li",[e._v("setting "),t("code",{staticClass:"doc-token"},[e._v("sanitize")]),e._v(" key of the untrusted option to "),t("code",{staticClass:"doc-token"},[e._v("true")]),e._v(" (for specific untrusted options)")]),t("li",[e._v("or by setting "),t("code",{staticClass:"doc-token"},[e._v("options-sanitize")]),e._v(" prop of QSelect (for all options)")])]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("If you use "),t("code",{staticClass:"doc-token"},[e._v("option")]),e._v(" slot, then you are responsible for sanitization of the menu options. The "),t("code",{staticClass:"doc-token"},[e._v("options-sanitize")]),e._v(" prop will not apply.")])]),t("p",[e._v("The displayed value of QSelect is sanitized if:")]),t("ul",[t("li",[e._v("the "),t("code",{staticClass:"doc-token"},[e._v("display-value-sanitize")]),e._v(" prop of QSelect is set")]),t("li",[e._v("or you are not using "),t("code",{staticClass:"doc-token"},[e._v("display-value")]),e._v(" and\n"),t("ul",[t("li",[e._v("the "),t("code",{staticClass:"doc-token"},[e._v("options-sanitize")]),e._v(" prop of QSelect is set")]),t("li",[e._v("any selected option has "),t("code",{staticClass:"doc-token"},[e._v("sanitize")]),e._v(" key set to "),t("code",{staticClass:"doc-token"},[e._v("true")])])])])]),t("div",{staticClass:"doc-note doc-note--warning"},[t("p",{staticClass:"doc-note__title"},[e._v("WARNING")]),t("p",[e._v("If you use "),t("code",{staticClass:"doc-token"},[e._v("selected")]),e._v(" or "),t("code",{staticClass:"doc-token"},[e._v("selected-item")]),e._v(" slots, then you are responsible for sanitization of the display value. The "),t("code",{staticClass:"doc-token"},[e._v("display-value-sanitize")]),e._v(" prop will not apply.")])]),t("doc-example",{attrs:{title:"Sanitize options",file:"QSelect/SanitizeOptions"}}),t("doc-example",{attrs:{title:"Sanitize display value",file:"QSelect/SanitizeDisplayCustomValue"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"render-performance"},on:{click:function(t){return e.copyHeading("render-performance")}}},[e._v("Render performance")]),t("p",[e._v("The render performance is NOT affected much by the number of options, unless "),t("code",{staticClass:"doc-token"},[e._v("map-options")]),e._v(" is used on a large set.\nNotice the infinite scroll in place which renders additional options as the user scrolls through the list.")]),t("div",{staticClass:"doc-note doc-note--tip"},[t("p",{staticClass:"doc-note__title"},[e._v("TIP")]),t("p",[e._v("To get the best performance while using lots of options freeze the array you are passing in the "),t("code",{staticClass:"doc-token"},[e._v("options")]),e._v(" prop using "),t("code",{staticClass:"doc-token"},[e._v("Object.freeze(options)")]),e._v(".")])]),t("doc-example",{attrs:{title:"100k options",file:"QSelect/RenderPerf"}}),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"keyboard-navigation"},on:{click:function(t){return e.copyHeading("keyboard-navigation")}}},[e._v("Keyboard navigation")]),t("p",[e._v("When QSelect is focused:")]),t("ul",[t("li",[e._v("pressing "),t("kbd",[e._v("ENTER")]),e._v(", "),t("kbd",[e._v("ARROW DOWN")]),e._v(" (or "),t("kbd",[e._v("SPACE")]),e._v(" if "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" is not set) will open the list of options")]),t("li",[e._v("if "),t("code",{staticClass:"doc-token"},[e._v("use-chips")]),e._v(" is set:\n"),t("ul",[t("li",[e._v("pressing "),t("kbd",[e._v("SHIFT")]),e._v(" + "),t("kbd",[e._v("TAB")]),e._v(" will navigate backwards through the QChips (if a QChip is selected "),t("kbd",[e._v("TAB")]),e._v(" will navigate forward through the QChips)")]),t("li",[e._v("pressing "),t("kbd",[e._v("ENTER")]),e._v(" when a QChip is selected will remove that option from the selection")]),t("li",[e._v("pressing "),t("kbd",[e._v("BACKSPACE")]),e._v(" will remove the last option from the selection (when "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" is set the input should be empty)")])])]),t("li",[e._v("pressing "),t("kbd",[e._v("TAB")]),e._v(" (or "),t("kbd",[e._v("SHIFT")]),e._v(" + "),t("kbd",[e._v("TAB")]),e._v(" if "),t("code",{staticClass:"doc-token"},[e._v("use-chips")]),e._v(" is not set or the first QChip is selected) will navigate to the next or previous focusable element on page")]),t("li",[e._v("typing text ("),t("kbd",[e._v("0")]),e._v(" - "),t("kbd",[e._v("9")]),e._v(" or "),t("kbd",[e._v("A")]),e._v(" - "),t("kbd",[e._v("Z")]),e._v(") if "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" is not set will:\n"),t("ul",[t("li",[e._v("create a search buffer (will be reset when a new key is not typed for 1.5 seconds) that will be used to search in the options labels")]),t("li",[e._v("select the next option starting with that letter (after the current focused one) if the first key in buffer is typed multiple times")]),t("li",[e._v("select the next option (starting with the current focused one) that matches the typed text (the match is fuzzy - the option label should start with the first letter and contain all the letters)")])])])]),t("p",[e._v("When the list of options is opened:")]),t("ul",[t("li",[e._v("pressing "),t("kbd",[e._v("ARROW UP")]),e._v(" or "),t("kbd",[e._v("ARROW DOWN")]),e._v(" will navigate up or down in the list of options")]),t("li",[e._v("pressing "),t("kbd",[e._v("PAGE UP")]),e._v(" or "),t("kbd",[e._v("PAGE DOWN")]),e._v(" will navigate one page up or down in the list of options")]),t("li",[e._v("pressing "),t("kbd",[e._v("HOME")]),e._v(" or "),t("kbd",[e._v("END")]),e._v(" will navigate to the start or end of the list of options (only if you are not using "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(", or the input is empty)")]),t("li",[e._v("when navigating using arrow keys, navigation will wrap when reaching the start or end of the list")]),t("li",[e._v("pressing "),t("kbd",[e._v("ENTER")]),e._v(" (or "),t("kbd",[e._v("SPACE")]),e._v(" when "),t("code",{staticClass:"doc-token"},[e._v("use-input")]),e._v(" is not set, or "),t("kbd",[e._v("TAB")]),e._v(" when "),t("code",{staticClass:"doc-token"},[e._v("multiple")]),e._v(" is not set) when an option is selected in the list will:\n"),t("ul",[t("li",[e._v("select the option and close the list of options if "),t("code",{staticClass:"doc-token"},[e._v("multiple")]),e._v(" is not set")]),t("li",[e._v("toggle the option if "),t("code",{staticClass:"doc-token"},[e._v("multiple")]),e._v(" is set")])])])]),t("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"native-form-submit"},on:{click:function(t){return e.copyHeading("native-form-submit")}}},[e._v("Native form submit "),t("q-badge",{attrs:{align:"top",color:"brand-primary",label:"v1.9+"}})],1),t("p",[e._v("When dealing with a native form which has an "),t("code",{staticClass:"doc-token"},[e._v("action")]),e._v(" and a "),t("code",{staticClass:"doc-token"},[e._v("method")]),e._v(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),t("code",{staticClass:"doc-token"},[e._v("name")]),e._v(" property on QSelect, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")]),t("doc-example",{attrs:{title:"Native form",file:"QSelect/NativeForm"}})],1)},s=[],n=o("8669"),a={name:"DocMarkdownPage",created:function(){this.metaTitle="Select",this.metaDesc="The QSelect Vue component has two types of selection - single or multiple. This component opens up a menu for the selection list and action. A filter can also be used for longer lists.",this.nav=[{name:"Input Textfield",category:"Form Components",path:"/vue-components/input",dir:"left"},{name:"File picker",category:"Form Components",path:"/vue-components/file-picker",dir:"right"}],this.toc=[{id:"qselect-api",title:"QSelect API"},{id:"design",title:"Design"},{id:"overview",title:"Overview",sub:!0},{id:"decorators",title:"Decorators",sub:!0},{id:"coloring",title:"Coloring",sub:!0},{id:"clearable",title:"Clearable",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"slots-with-qbtn-type-submit",title:"Slots with QBtn type “submit”",sub:!0},{id:"menu-transitions",title:"Menu transitions",sub:!0},{id:"options-list-display-mode",title:"Options list display mode",sub:!0},{id:"dialog-mode-close-icon",title:"Dialog mode close icon",sub:!0},{id:"the-model",title:"The model"},{id:"the-options",title:"The options"},{id:"options-type",title:"Options type",sub:!0},{id:"affecting-model",title:"Affecting model",sub:!0},{id:"custom-prop-names",title:"Custom prop names",sub:!0},{id:"customizing-menu-options",title:"Customizing menu options",sub:!0},{id:"lazy-loading",title:"Lazy loading",sub:!0},{id:"cover-mode",title:"Cover mode",sub:!0},{id:"the-display-value",title:"The display value"},{id:"filtering-and-autocomplete",title:"Filtering and autocomplete"},{id:"native-attributes-with-use-input",title:"Native attributes with use-input",sub:!0},{id:"create-new-values",title:"Create new values"},{id:"the-new-value-mode-prop",title:"The new-value-mode prop",sub:!0},{id:"the-new-value-event",title:"The @new-value event",sub:!0},{id:"using-menu-and-filtering",title:"Using menu and filtering",sub:!0},{id:"sanitization",title:"Sanitization"},{id:"render-performance",title:"Render performance"},{id:"keyboard-navigation",title:"Keyboard navigation"},{id:"native-form-submit",title:"Native form submit"}],this.copyHeading=n["a"]}},l=a,c=o("2877"),d=Object(c["a"])(l,i,s,!1,null,null,null);t["default"]=d.exports}}]);