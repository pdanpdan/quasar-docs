(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[178],{4847:function(t,s,e){"use strict";e.r(s);var n=function(){var t=this,s=t._self._c;return s("doc-page",{attrs:{"meta-title":t.metaTitle,title:"DOM Utils",nav:t.nav,toc:t.toc,"meta-desc":t.metaDesc}},[s("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"helping-tree-shake"},on:{click:function(s){return t.copyHeading("helping-tree-shake")}}},[t._v("Helping Tree-Shake")]),s("p",[t._v("You will notice all examples import different parts of Quasar. However, if you need only one specific util method, then you can use ES6 destructuring to help Tree Shaking embed only that method and not all around it.")]),s("p",[t._v("Example with "),s("code",{staticClass:"doc-token"},[t._v("dom")]),t._v(" utils:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Offset on screen")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { top: 10, left: 100 }")]),t._v("\n")])]),s("p",[t._v("You can also import all of dom utils and use whatever you need like this (but note that your bundle will contain unused methods too):")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Offset on screen")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { top: 10, left: 100 }")]),t._v("\n")])]),s("div",{staticClass:"doc-note doc-note--tip"},[s("p",{staticClass:"doc-note__title"},[t._v("TIP")]),s("p",[t._v("For usage with the UMD build see "),s("doc-link",{attrs:{to:"/start/umd#quasar-global-object"}},[t._v("here")]),t._v(".")],1)]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"offset-on-screen-viewport"},on:{click:function(s){return t.copyHeading("offset-on-screen-viewport")}}},[t._v("Offset on screen viewport")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Offset on screen")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { top: 10, left: 100 }")]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"get-computed-style"},on:{click:function(s){return t.copyHeading("get-computed-style")}}},[t._v("Get Computed Style")]),s("p",[t._v("This applies only when DomElement is visible! It returns the "),s("strong",[t._v("computed")]),t._v(" browser style, so the property you are asking for doesnâ€™t necessary has to be applied within a "),s("code",{staticClass:"doc-token"},[t._v("style")]),t._v(" attribute.")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" style "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get COMPUTED style (when DomElement is visible!)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Computed means a DomElement might not have "height" CSS property set,')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// but that does not mean it doesn't have a height when it's displayed.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The following method accesses the computed CSS provided by the browser:")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'height'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '10px' <<< notice it returns a String ending in 'px'")]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"get-height-width"},on:{click:function(s){return t.copyHeading("get-height-width")}}},[t._v("Get Height / Width")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Some aliases of the previous method for "width" and "height" which')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns Numbers instead of Strings:")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10 100")]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"apply-css-properties-in-batch"},on:{click:function(s){return t.copyHeading("apply-css-properties-in-batch")}}},[t._v("Apply CSS Properties in Batch")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" css "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Apply a list of CSS properties to a DomNode")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DomElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"execute-when-dom-is-ready"},on:{click:function(s){return t.copyHeading("execute-when-dom-is-ready")}}},[t._v("Execute when DOM is ready")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ready "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dom\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Execute a Function when DOM is ready:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ....")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},a=[],o=e("8669"),r={name:"DocMarkdownPage",created:function(){this.metaTitle="DOM Utils",this.metaDesc="A set of Quasar methods for DOM elements which helps you in retrieving the offset on screen viewport, getting and setting styles, waiting for the DOM to be ready and morphing DOM elements.",this.nav=[{name:"Color Utils",category:"Quasar Utils",path:"/quasar-utils/color-utils",dir:"left"},{name:"Morph Utils",category:"Quasar Utils",path:"/quasar-utils/morph-utils",dir:"right"}],this.toc=[{id:"helping-tree-shake",title:"Helping Tree-Shake",sub:!0},{id:"offset-on-screen-viewport",title:"Offset on screen viewport"},{id:"get-computed-style",title:"Get Computed Style"},{id:"get-height-width",title:"Get Height / Width"},{id:"apply-css-properties-in-batch",title:"Apply CSS Properties in Batch"},{id:"execute-when-dom-is-ready",title:"Execute when DOM is ready"}],this.copyHeading=o["a"]}},p=r,c=e("2877"),i=Object(c["a"])(p,n,a,!1,null,null,null);s["default"]=i.exports}}]);